// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree _Nonnull free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureStructU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureStructI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureStructU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureStructI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureStructU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureStructI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureStructU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureStructI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureStructF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureStructF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void*_Nonnull returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t, UniffiForeignFutureStructPointer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureStructRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureStructVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTH_MANAGER_RECONCILER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTH_MANAGER_RECONCILER_METHOD0
typedef void (*UniffiCallbackInterfaceAuthManagerReconcilerMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_DEVICE_ACCESS_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_DEVICE_ACCESS_METHOD0
typedef void (*UniffiCallbackInterfaceDeviceAccessMethod0)(uint64_t, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FFI_RECONCILE_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FFI_RECONCILE_METHOD0
typedef void (*UniffiCallbackInterfaceFfiReconcileMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_IMPORT_WALLET_MANAGER_RECONCILER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_IMPORT_WALLET_MANAGER_RECONCILER_METHOD0
typedef void (*UniffiCallbackInterfaceImportWalletManagerReconcilerMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD0
typedef void (*UniffiCallbackInterfaceKeychainAccessMethod0)(uint64_t, RustBuffer, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD1
typedef void (*UniffiCallbackInterfaceKeychainAccessMethod1)(uint64_t, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD2
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEYCHAIN_ACCESS_METHOD2
typedef void (*UniffiCallbackInterfaceKeychainAccessMethod2)(uint64_t, RustBuffer, int8_t* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_PENDING_WALLET_MANAGER_RECONCILER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_PENDING_WALLET_MANAGER_RECONCILER_METHOD0
typedef void (*UniffiCallbackInterfacePendingWalletManagerReconcilerMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD0
typedef void (*UniffiCallbackInterfaceTapcardTransportProtocolMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD1
typedef void (*UniffiCallbackInterfaceTapcardTransportProtocolMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD2
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL_METHOD2
typedef void (*UniffiCallbackInterfaceTapcardTransportProtocolMethod2)(uint64_t, RustBuffer, UniffiForeignFutureCompleteRustBuffer _Nonnull, uint64_t, UniffiForeignFuture* _Nonnull
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_WALLET_MANAGER_RECONCILER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_WALLET_MANAGER_RECONCILER_METHOD0
typedef void (*UniffiCallbackInterfaceWalletManagerReconcilerMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTO_COMPLETE_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTO_COMPLETE_METHOD0
typedef void (*UniffiCallbackInterfaceAutoCompleteMethod0)(uint64_t, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTO_COMPLETE_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_AUTO_COMPLETE_METHOD1
typedef void (*UniffiCallbackInterfaceAutoCompleteMethod1)(uint64_t, RustBuffer, int8_t* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_AUTH_MANAGER_RECONCILER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_AUTH_MANAGER_RECONCILER
typedef struct UniffiVTableCallbackInterfaceAuthManagerReconciler {
    UniffiCallbackInterfaceAuthManagerReconcilerMethod0 _Nonnull reconcile;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceAuthManagerReconciler;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_DEVICE_ACCESS
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_DEVICE_ACCESS
typedef struct UniffiVTableCallbackInterfaceDeviceAccess {
    UniffiCallbackInterfaceDeviceAccessMethod0 _Nonnull timezone;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceDeviceAccess;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_FFI_RECONCILE
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_FFI_RECONCILE
typedef struct UniffiVTableCallbackInterfaceFfiReconcile {
    UniffiCallbackInterfaceFfiReconcileMethod0 _Nonnull reconcile;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceFfiReconcile;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_IMPORT_WALLET_MANAGER_RECONCILER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_IMPORT_WALLET_MANAGER_RECONCILER
typedef struct UniffiVTableCallbackInterfaceImportWalletManagerReconciler {
    UniffiCallbackInterfaceImportWalletManagerReconcilerMethod0 _Nonnull reconcile;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceImportWalletManagerReconciler;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEYCHAIN_ACCESS
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEYCHAIN_ACCESS
typedef struct UniffiVTableCallbackInterfaceKeychainAccess {
    UniffiCallbackInterfaceKeychainAccessMethod0 _Nonnull save;
    UniffiCallbackInterfaceKeychainAccessMethod1 _Nonnull get;
    UniffiCallbackInterfaceKeychainAccessMethod2 _Nonnull delete;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceKeychainAccess;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PENDING_WALLET_MANAGER_RECONCILER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PENDING_WALLET_MANAGER_RECONCILER
typedef struct UniffiVTableCallbackInterfacePendingWalletManagerReconciler {
    UniffiCallbackInterfacePendingWalletManagerReconcilerMethod0 _Nonnull reconcile;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfacePendingWalletManagerReconciler;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TAPCARD_TRANSPORT_PROTOCOL
typedef struct UniffiVTableCallbackInterfaceTapcardTransportProtocol {
    UniffiCallbackInterfaceTapcardTransportProtocolMethod0 _Nonnull setMessage;
    UniffiCallbackInterfaceTapcardTransportProtocolMethod1 _Nonnull appendMessage;
    UniffiCallbackInterfaceTapcardTransportProtocolMethod2 _Nonnull transmitApdu;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceTapcardTransportProtocol;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_WALLET_MANAGER_RECONCILER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_WALLET_MANAGER_RECONCILER
typedef struct UniffiVTableCallbackInterfaceWalletManagerReconciler {
    UniffiCallbackInterfaceWalletManagerReconcilerMethod0 _Nonnull reconcile;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceWalletManagerReconciler;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_AUTO_COMPLETE
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_AUTO_COMPLETE
typedef struct UniffiVTableCallbackInterfaceAutoComplete {
    UniffiCallbackInterfaceAutoCompleteMethod0 _Nonnull autocomplete;
    UniffiCallbackInterfaceAutoCompleteMethod1 _Nonnull isValidWord;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceAutoComplete;

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESS
void*_Nonnull uniffi_cove_fn_clone_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESS
void uniffi_cove_fn_free_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESS_FROM_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESS_FROM_STRING
void*_Nonnull uniffi_cove_fn_constructor_address_from_string(RustBuffer address, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESS_PREVIEW_NEW
void*_Nonnull uniffi_cove_fn_constructor_address_preview_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_SPACED_OUT
RustBuffer uniffi_cove_fn_method_address_spaced_out(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_STRING
RustBuffer uniffi_cove_fn_method_address_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_TOSTRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_TOSTRING
RustBuffer uniffi_cove_fn_method_address_tostring(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_UNFORMATTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESS_UNFORMATTED
RustBuffer uniffi_cove_fn_method_address_unformatted(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSARGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSARGS
void*_Nonnull uniffi_cove_fn_clone_addressargs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSARGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSARGS
void uniffi_cove_fn_free_addressargs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESSARGS_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESSARGS_NEW
void*_Nonnull uniffi_cove_fn_constructor_addressargs_new(void*_Nonnull address, RustBuffer change_address, RustBuffer direction, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSINFO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSINFO
void*_Nonnull uniffi_cove_fn_clone_addressinfo(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSINFO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSINFO
void uniffi_cove_fn_free_addressinfo(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_ADDRESS
void*_Nonnull uniffi_cove_fn_method_addressinfo_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_ADDRESS_UNFORMATTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_ADDRESS_UNFORMATTED
RustBuffer uniffi_cove_fn_method_addressinfo_address_unformatted(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSINFO_INDEX
uint32_t uniffi_cove_fn_method_addressinfo_index(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSWITHNETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ADDRESSWITHNETWORK
void*_Nonnull uniffi_cove_fn_clone_addresswithnetwork(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSWITHNETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ADDRESSWITHNETWORK
void uniffi_cove_fn_free_addresswithnetwork(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESSWITHNETWORK_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ADDRESSWITHNETWORK_NEW
void*_Nonnull uniffi_cove_fn_constructor_addresswithnetwork_new(RustBuffer address, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_ADDRESS
void*_Nonnull uniffi_cove_fn_method_addresswithnetwork_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_AMOUNT
RustBuffer uniffi_cove_fn_method_addresswithnetwork_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ADDRESSWITHNETWORK_NETWORK
RustBuffer uniffi_cove_fn_method_addresswithnetwork_network(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AMOUNT
void*_Nonnull uniffi_cove_fn_clone_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AMOUNT
void uniffi_cove_fn_free_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_FROM_SAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_FROM_SAT
void*_Nonnull uniffi_cove_fn_constructor_amount_from_sat(uint64_t sats, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_ONE_BTC
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_ONE_BTC
void*_Nonnull uniffi_cove_fn_constructor_amount_one_btc(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_ONE_SAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AMOUNT_ONE_SAT
void*_Nonnull uniffi_cove_fn_constructor_amount_one_sat(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_AS_BTC
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_AS_BTC
double uniffi_cove_fn_method_amount_as_btc(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_AS_SATS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_AS_SATS
uint64_t uniffi_cove_fn_method_amount_as_sats(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_BTC_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_BTC_STRING
RustBuffer uniffi_cove_fn_method_amount_btc_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_BTC_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_BTC_STRING_WITH_UNIT
RustBuffer uniffi_cove_fn_method_amount_btc_string_with_unit(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_FMT_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_FMT_STRING_WITH_UNIT
RustBuffer uniffi_cove_fn_method_amount_fmt_string_with_unit(void*_Nonnull ptr, RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_SATS_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_SATS_STRING
RustBuffer uniffi_cove_fn_method_amount_sats_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_SATS_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AMOUNT_SATS_STRING_WITH_UNIT
RustBuffer uniffi_cove_fn_method_amount_sats_string_with_unit(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AUTHPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AUTHPIN
void*_Nonnull uniffi_cove_fn_clone_authpin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AUTHPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AUTHPIN
void uniffi_cove_fn_free_authpin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AUTHPIN_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_AUTHPIN_NEW
void*_Nonnull uniffi_cove_fn_constructor_authpin_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTHPIN_CHECK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTHPIN_CHECK
int8_t uniffi_cove_fn_method_authpin_check(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_AUTOCOMPLETE
void*_Nonnull uniffi_cove_fn_clone_autocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_AUTOCOMPLETE
void uniffi_cove_fn_free_autocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_AUTOCOMPLETE
void uniffi_cove_fn_init_callback_vtable_autocomplete(const UniffiVTableCallbackInterfaceAutoComplete* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTOCOMPLETE_AUTOCOMPLETE
RustBuffer uniffi_cove_fn_method_autocomplete_autocomplete(void*_Nonnull ptr, RustBuffer word, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_AUTOCOMPLETE_IS_VALID_WORD
int8_t uniffi_cove_fn_method_autocomplete_is_valid_word(void*_Nonnull ptr, RustBuffer word, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BALANCE
void*_Nonnull uniffi_cove_fn_clone_balance(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BALANCE
void uniffi_cove_fn_free_balance(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BALANCE_ZERO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BALANCE_ZERO
void*_Nonnull uniffi_cove_fn_constructor_balance_zero(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BALANCE_SPENDABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BALANCE_SPENDABLE
void*_Nonnull uniffi_cove_fn_method_balance_spendable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BALANCE_TOTAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BALANCE_TOTAL
void*_Nonnull uniffi_cove_fn_method_balance_total(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BBQRJOINRESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BBQRJOINRESULT
void*_Nonnull uniffi_cove_fn_clone_bbqrjoinresult(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BBQRJOINRESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BBQRJOINRESULT
void uniffi_cove_fn_free_bbqrjoinresult(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_FINAL_RESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_FINAL_RESULT
RustBuffer uniffi_cove_fn_method_bbqrjoinresult_final_result(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_IS_COMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_IS_COMPLETE
int8_t uniffi_cove_fn_method_bbqrjoinresult_is_complete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_PARTS_LEFT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINRESULT_PARTS_LEFT
uint32_t uniffi_cove_fn_method_bbqrjoinresult_parts_left(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BBQRJOINED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BBQRJOINED
void*_Nonnull uniffi_cove_fn_clone_bbqrjoined(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BBQRJOINED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BBQRJOINED
void uniffi_cove_fn_free_bbqrjoined(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINED_GET_GROUPED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINED_GET_GROUPED_WORDS
RustBuffer uniffi_cove_fn_method_bbqrjoined_get_grouped_words(void*_Nonnull ptr, uint8_t chunks, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINED_GET_SEED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BBQRJOINED_GET_SEED_WORDS
RustBuffer uniffi_cove_fn_method_bbqrjoined_get_seed_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP329LABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP329LABELS
void*_Nonnull uniffi_cove_fn_clone_bip329labels(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP329LABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP329LABELS
void uniffi_cove_fn_free_bip329labels(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP39AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP39AUTOCOMPLETE
void*_Nonnull uniffi_cove_fn_clone_bip39autocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP39AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP39AUTOCOMPLETE
void uniffi_cove_fn_free_bip39autocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BIP39AUTOCOMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BIP39AUTOCOMPLETE_NEW
void*_Nonnull uniffi_cove_fn_constructor_bip39autocomplete_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_AUTOCOMPLETE
RustBuffer uniffi_cove_fn_method_bip39autocomplete_autocomplete(void*_Nonnull ptr, RustBuffer word, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_IS_VALID_WORD
int8_t uniffi_cove_fn_method_bip39autocomplete_is_valid_word(void*_Nonnull ptr, RustBuffer word, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_NEXT_FIELD_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39AUTOCOMPLETE_NEXT_FIELD_NUMBER
uint8_t uniffi_cove_fn_method_bip39autocomplete_next_field_number(void*_Nonnull ptr, uint8_t current_field_number, RustBuffer entered_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP39WORDSPECIFICAUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BIP39WORDSPECIFICAUTOCOMPLETE
void*_Nonnull uniffi_cove_fn_clone_bip39wordspecificautocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP39WORDSPECIFICAUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BIP39WORDSPECIFICAUTOCOMPLETE
void uniffi_cove_fn_free_bip39wordspecificautocomplete(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BIP39WORDSPECIFICAUTOCOMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BIP39WORDSPECIFICAUTOCOMPLETE_NEW
void*_Nonnull uniffi_cove_fn_constructor_bip39wordspecificautocomplete_new(uint16_t word_number, RustBuffer number_of_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_AUTOCOMPLETE
RustBuffer uniffi_cove_fn_method_bip39wordspecificautocomplete_autocomplete(void*_Nonnull ptr, RustBuffer word, RustBuffer all_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_BIP39_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_BIP39_WORD
int8_t uniffi_cove_fn_method_bip39wordspecificautocomplete_is_bip39_word(void*_Nonnull ptr, RustBuffer word, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_VALID_WORD
int8_t uniffi_cove_fn_method_bip39wordspecificautocomplete_is_valid_word(void*_Nonnull ptr, RustBuffer word, RustBuffer all_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_NEXT_FIELD_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_NEXT_FIELD_NUMBER
uint8_t uniffi_cove_fn_method_bip39wordspecificautocomplete_next_field_number(void*_Nonnull ptr, uint8_t current_field_number, RustBuffer entered_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BITCOINTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BITCOINTRANSACTION
void*_Nonnull uniffi_cove_fn_clone_bitcointransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BITCOINTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BITCOINTRANSACTION
void uniffi_cove_fn_free_bitcointransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_NEW
void*_Nonnull uniffi_cove_fn_constructor_bitcointransaction_new(RustBuffer tx_hex, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMDATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMDATA
void*_Nonnull uniffi_cove_fn_constructor_bitcointransaction_tryfromdata(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMNFCMESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMNFCMESSAGE
void*_Nonnull uniffi_cove_fn_constructor_bitcointransaction_tryfromnfcmessage(void*_Nonnull nfc_message, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMSTRINGORDATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMSTRINGORDATA
void*_Nonnull uniffi_cove_fn_constructor_bitcointransaction_tryfromstringordata(RustBuffer string_or_data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_NORMALIZE_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_NORMALIZE_TX_ID
RustBuffer uniffi_cove_fn_method_bitcointransaction_normalize_tx_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_TX_ID
void*_Nonnull uniffi_cove_fn_method_bitcointransaction_tx_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_TX_ID_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BITCOINTRANSACTION_TX_ID_HASH
RustBuffer uniffi_cove_fn_method_bitcointransaction_tx_id_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BOXEDROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_BOXEDROUTE
void*_Nonnull uniffi_cove_fn_clone_boxedroute(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BOXEDROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_BOXEDROUTE
void uniffi_cove_fn_free_boxedroute(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BOXEDROUTE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_BOXEDROUTE_NEW
void*_Nonnull uniffi_cove_fn_constructor_boxedroute_new(RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BOXEDROUTE_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_BOXEDROUTE_ROUTE
RustBuffer uniffi_cove_fn_method_boxedroute_route(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CHAINPOSITION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CHAINPOSITION
void*_Nonnull uniffi_cove_fn_clone_chainposition(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CHAINPOSITION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CHAINPOSITION
void uniffi_cove_fn_free_chainposition(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONFIRMDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONFIRMDETAILS
void*_Nonnull uniffi_cove_fn_clone_confirmdetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONFIRMDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONFIRMDETAILS
void uniffi_cove_fn_free_confirmdetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_CONFIRMDETAILS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_CONFIRMDETAILS_PREVIEW_NEW
void*_Nonnull uniffi_cove_fn_constructor_confirmdetails_preview_new(uint64_t amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_FEE_RATE
void*_Nonnull uniffi_cove_fn_method_confirmdetails_fee_rate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_FEE_TOTAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_FEE_TOTAL
void*_Nonnull uniffi_cove_fn_method_confirmdetails_fee_total(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_ID
void*_Nonnull uniffi_cove_fn_method_confirmdetails_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_ID_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_ID_HASH
RustBuffer uniffi_cove_fn_method_confirmdetails_id_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_INPUTS
RustBuffer uniffi_cove_fn_method_confirmdetails_inputs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_NORMALIZED_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_NORMALIZED_ID
RustBuffer uniffi_cove_fn_method_confirmdetails_normalized_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_OUTPUTS
RustBuffer uniffi_cove_fn_method_confirmdetails_outputs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT
void*_Nonnull uniffi_cove_fn_method_confirmdetails_psbt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_BYTES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_BYTES
RustBuffer uniffi_cove_fn_method_confirmdetails_psbt_bytes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_TO_BBQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_TO_BBQR
RustBuffer uniffi_cove_fn_method_confirmdetails_psbt_to_bbqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_TO_HEX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_PSBT_TO_HEX
RustBuffer uniffi_cove_fn_method_confirmdetails_psbt_to_hex(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SENDING_AMOUNT
void*_Nonnull uniffi_cove_fn_method_confirmdetails_sending_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SENDING_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SENDING_TO
void*_Nonnull uniffi_cove_fn_method_confirmdetails_sending_to(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SPENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMDETAILS_SPENDING_AMOUNT
void*_Nonnull uniffi_cove_fn_method_confirmdetails_spending_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONFIRMEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONFIRMEDTRANSACTION
void*_Nonnull uniffi_cove_fn_clone_confirmedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONFIRMEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONFIRMEDTRANSACTION
void uniffi_cove_fn_free_confirmedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT
uint32_t uniffi_cove_fn_method_confirmedtransaction_block_height(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT_FMT
RustBuffer uniffi_cove_fn_method_confirmedtransaction_block_height_fmt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT
uint64_t uniffi_cove_fn_method_confirmedtransaction_confirmed_at(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT
RustBuffer uniffi_cove_fn_method_confirmedtransaction_confirmed_at_fmt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT_WITH_TIME
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT_WITH_TIME
RustBuffer uniffi_cove_fn_method_confirmedtransaction_confirmed_at_fmt_with_time(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_FIAT_AMOUNT
RustBuffer uniffi_cove_fn_method_confirmedtransaction_fiat_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_ID
void*_Nonnull uniffi_cove_fn_method_confirmedtransaction_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_LABEL
RustBuffer uniffi_cove_fn_method_confirmedtransaction_label(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_SENT_AND_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONFIRMEDTRANSACTION_SENT_AND_RECEIVED
void*_Nonnull uniffi_cove_fn_method_confirmedtransaction_sent_and_received(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONVERTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_CONVERTER
void*_Nonnull uniffi_cove_fn_clone_converter(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONVERTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_CONVERTER
void uniffi_cove_fn_free_converter(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_CONVERTER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_CONVERTER_NEW
void*_Nonnull uniffi_cove_fn_constructor_converter_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_CONVERT_FROM_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_CONVERT_FROM_FIAT
void*_Nonnull uniffi_cove_fn_method_converter_convert_from_fiat(void*_Nonnull ptr, double fiat_amount, RustBuffer currency, void*_Nonnull prices, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_CONVERT_FROM_FIAT_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_CONVERT_FROM_FIAT_STRING
void*_Nonnull uniffi_cove_fn_method_converter_convert_from_fiat_string(void*_Nonnull ptr, RustBuffer fiat_amount, RustBuffer currency, void*_Nonnull prices, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_GET_FIAT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_GET_FIAT_VALUE
double uniffi_cove_fn_method_converter_get_fiat_value(void*_Nonnull ptr, RustBuffer fiat_amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_REMOVE_FIAT_SUFFIX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_CONVERTER_REMOVE_FIAT_SUFFIX
RustBuffer uniffi_cove_fn_method_converter_remove_fiat_suffix(void*_Nonnull ptr, RustBuffer fiat_amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_DATABASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_DATABASE
void*_Nonnull uniffi_cove_fn_clone_database(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_DATABASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_DATABASE
void uniffi_cove_fn_free_database(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_DATABASE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_DATABASE_NEW
void*_Nonnull uniffi_cove_fn_constructor_database_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_DANGEROUS_RESET_ALL_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_DANGEROUS_RESET_ALL_DATA
void uniffi_cove_fn_method_database_dangerous_reset_all_data(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_GLOBAL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_GLOBAL_CONFIG
void*_Nonnull uniffi_cove_fn_method_database_global_config(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_HISTORICAL_PRICES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_HISTORICAL_PRICES
void*_Nonnull uniffi_cove_fn_method_database_historical_prices(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_UNSIGNED_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_UNSIGNED_TRANSACTIONS
void*_Nonnull uniffi_cove_fn_method_database_unsigned_transactions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_DATABASE_WALLETS
void*_Nonnull uniffi_cove_fn_method_database_wallets(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_DEVICE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_DEVICE
void*_Nonnull uniffi_cove_fn_clone_device(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_DEVICE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_DEVICE
void uniffi_cove_fn_free_device(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_DEVICE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_DEVICE_NEW
void*_Nonnull uniffi_cove_fn_constructor_device_new(uint64_t device, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATE
void*_Nonnull uniffi_cove_fn_clone_feerate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATE
void uniffi_cove_fn_free_feerate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATE_FROM_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATE_FROM_SAT_PER_VB
void*_Nonnull uniffi_cove_fn_constructor_feerate_from_sat_per_vb(float sat_per_vb, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATE_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATE_SAT_PER_VB
float uniffi_cove_fn_method_feerate_sat_per_vb(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTION
void*_Nonnull uniffi_cove_fn_clone_feerateoption(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTION
void uniffi_cove_fn_free_feerateoption(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTION_NEW
void*_Nonnull uniffi_cove_fn_constructor_feerateoption_new(RustBuffer fee_speed, float fee_rate, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_DURATION
RustBuffer uniffi_cove_fn_method_feerateoption_duration(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_FEE_RATE
void*_Nonnull uniffi_cove_fn_method_feerateoption_fee_rate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_FEE_SPEED
RustBuffer uniffi_cove_fn_method_feerateoption_fee_speed(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_IS_EQUAL
int8_t uniffi_cove_fn_method_feerateoption_is_equal(void*_Nonnull ptr, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTION_SAT_PER_VB
float uniffi_cove_fn_method_feerateoption_sat_per_vb(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONWITHTOTALFEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONWITHTOTALFEE
void*_Nonnull uniffi_cove_fn_clone_feerateoptionwithtotalfee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONWITHTOTALFEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONWITHTOTALFEE
void uniffi_cove_fn_free_feerateoptionwithtotalfee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONWITHTOTALFEE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONWITHTOTALFEE_NEW
void*_Nonnull uniffi_cove_fn_constructor_feerateoptionwithtotalfee_new(RustBuffer fee_speed, void*_Nonnull fee_rate, void*_Nonnull total_fee, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_DURATION
RustBuffer uniffi_cove_fn_method_feerateoptionwithtotalfee_duration(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE
void*_Nonnull uniffi_cove_fn_method_feerateoptionwithtotalfee_fee_rate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE_OPTIONS
void*_Nonnull uniffi_cove_fn_method_feerateoptionwithtotalfee_fee_rate_options(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_SPEED
RustBuffer uniffi_cove_fn_method_feerateoptionwithtotalfee_fee_speed(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_CUSTOM
int8_t uniffi_cove_fn_method_feerateoptionwithtotalfee_is_custom(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_EQUAL
int8_t uniffi_cove_fn_method_feerateoptionwithtotalfee_is_equal(void*_Nonnull ptr, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_SAT_PER_VB
float uniffi_cove_fn_method_feerateoptionwithtotalfee_sat_per_vb(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_TOTAL_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONWITHTOTALFEE_TOTAL_FEE
void*_Nonnull uniffi_cove_fn_method_feerateoptionwithtotalfee_total_fee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONS
void*_Nonnull uniffi_cove_fn_clone_feerateoptions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONS
void uniffi_cove_fn_free_feerateoptions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONS_PREVIEW_NEW
void*_Nonnull uniffi_cove_fn_constructor_feerateoptions_preview_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_FAST
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_FAST
void*_Nonnull uniffi_cove_fn_method_feerateoptions_fast(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_MEDIUM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_MEDIUM
void*_Nonnull uniffi_cove_fn_method_feerateoptions_medium(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_SLOW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONS_SLOW
void*_Nonnull uniffi_cove_fn_method_feerateoptions_slow(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONSWITHTOTALFEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FEERATEOPTIONSWITHTOTALFEE
void*_Nonnull uniffi_cove_fn_clone_feerateoptionswithtotalfee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONSWITHTOTALFEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FEERATEOPTIONSWITHTOTALFEE
void uniffi_cove_fn_free_feerateoptionswithtotalfee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONSWITHTOTALFEE_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FEERATEOPTIONSWITHTOTALFEE_PREVIEW_NEW
void*_Nonnull uniffi_cove_fn_constructor_feerateoptionswithtotalfee_preview_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_add_custom_fee(void*_Nonnull ptr, float fee_rate, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE_RATE
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_add_custom_fee_rate(void*_Nonnull ptr, void*_Nonnull fee_rate, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_CALCULATE_CUSTOM_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_CALCULATE_CUSTOM_FEE_SPEED
RustBuffer uniffi_cove_fn_method_feerateoptionswithtotalfee_calculate_custom_fee_speed(void*_Nonnull ptr, float fee_rate, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_CUSTOM
RustBuffer uniffi_cove_fn_method_feerateoptionswithtotalfee_custom(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_FAST
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_FAST
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_fast(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_FEE_RATE_OPTIONS
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_fee_rate_options(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_GET_FEE_RATE_WITH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_GET_FEE_RATE_WITH
RustBuffer uniffi_cove_fn_method_feerateoptionswithtotalfee_get_fee_rate_with(void*_Nonnull ptr, float fee_rate, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_MEDIUM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_MEDIUM
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_medium(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_REMOVE_CUSTOM_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_REMOVE_CUSTOM_FEE
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_remove_custom_fee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_SLOW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_SLOW
void*_Nonnull uniffi_cove_fn_method_feerateoptionswithtotalfee_slow(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_TRANSACTION_SIZE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FEERATEOPTIONSWITHTOTALFEE_TRANSACTION_SIZE
uint64_t uniffi_cove_fn_method_feerateoptionswithtotalfee_transaction_size(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FFIAPP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FFIAPP
void*_Nonnull uniffi_cove_fn_clone_ffiapp(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FFIAPP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FFIAPP
void uniffi_cove_fn_free_ffiapp(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FFIAPP_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FFIAPP_NEW
void*_Nonnull uniffi_cove_fn_constructor_ffiapp_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_AUTH_TYPE
RustBuffer uniffi_cove_fn_method_ffiapp_auth_type(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DANGEROUS_WIPE_ALL_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DANGEROUS_WIPE_ALL_DATA
void uniffi_cove_fn_method_ffiapp_dangerous_wipe_all_data(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DEBUG_OR_RELEASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DEBUG_OR_RELEASE
RustBuffer uniffi_cove_fn_method_ffiapp_debug_or_release(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_DISPATCH
void uniffi_cove_fn_method_ffiapp_dispatch(void*_Nonnull ptr, RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_EMAIL_MAILTO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_EMAIL_MAILTO
RustBuffer uniffi_cove_fn_method_ffiapp_email_mailto(void*_Nonnull ptr, RustBuffer ios, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_FEES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_FEES
uint64_t uniffi_cove_fn_method_ffiapp_fees(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_FIND_TAP_SIGNER_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_FIND_TAP_SIGNER_WALLET
RustBuffer uniffi_cove_fn_method_ffiapp_find_tap_signer_wallet(void*_Nonnull ptr, void*_Nonnull tap_signer, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GET_TAP_SIGNER_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GET_TAP_SIGNER_BACKUP
RustBuffer uniffi_cove_fn_method_ffiapp_get_tap_signer_backup(void*_Nonnull ptr, void*_Nonnull tap_signer, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GIT_SHORT_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GIT_SHORT_HASH
RustBuffer uniffi_cove_fn_method_ffiapp_git_short_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GO_TO_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_GO_TO_SELECTED_WALLET
RustBuffer uniffi_cove_fn_method_ffiapp_go_to_selected_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_HAS_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_HAS_WALLETS
int8_t uniffi_cove_fn_method_ffiapp_has_wallets(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_INIT_ON_START
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_INIT_ON_START
uint64_t uniffi_cove_fn_method_ffiapp_init_on_start(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LISTEN_FOR_UPDATES
void uniffi_cove_fn_method_ffiapp_listen_for_updates(void*_Nonnull ptr, uint64_t updater, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE
void uniffi_cove_fn_method_ffiapp_load_and_reset_default_route(void*_Nonnull ptr, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE_AFTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE_AFTER
void uniffi_cove_fn_method_ffiapp_load_and_reset_default_route_after(void*_Nonnull ptr, RustBuffer route, uint32_t after_millis, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_NETWORK
RustBuffer uniffi_cove_fn_method_ffiapp_network(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_NUM_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_NUM_WALLETS
uint16_t uniffi_cove_fn_method_ffiapp_num_wallets(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_PRICES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_PRICES
uint64_t uniffi_cove_fn_method_ffiapp_prices(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_RESET_DEFAULT_ROUTE_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_RESET_DEFAULT_ROUTE_TO
void uniffi_cove_fn_method_ffiapp_reset_default_route_to(void*_Nonnull ptr, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_RESET_NESTED_ROUTES_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_RESET_NESTED_ROUTES_TO
void uniffi_cove_fn_method_ffiapp_reset_nested_routes_to(void*_Nonnull ptr, RustBuffer default_route, RustBuffer nested_routes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_SAVE_TAP_SIGNER_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_SAVE_TAP_SIGNER_BACKUP
int8_t uniffi_cove_fn_method_ffiapp_save_tap_signer_backup(void*_Nonnull ptr, void*_Nonnull tap_signer, RustBuffer backup, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_SELECT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_SELECT_WALLET
void uniffi_cove_fn_method_ffiapp_select_wallet(void*_Nonnull ptr, RustBuffer id, RustBuffer next_route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_STATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_STATE
RustBuffer uniffi_cove_fn_method_ffiapp_state(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_UNVERIFIED_WALLET_IDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_UNVERIFIED_WALLET_IDS
RustBuffer uniffi_cove_fn_method_ffiapp_unverified_wallet_ids(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_VERSION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFIAPP_VERSION
RustBuffer uniffi_cove_fn_method_ffiapp_version(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FFINFCREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FFINFCREADER
void*_Nonnull uniffi_cove_fn_clone_ffinfcreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FFINFCREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FFINFCREADER
void uniffi_cove_fn_free_ffinfcreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FFINFCREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FFINFCREADER_NEW
void*_Nonnull uniffi_cove_fn_constructor_ffinfcreader_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_DATA_FROM_RECORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_DATA_FROM_RECORDS
RustBuffer uniffi_cove_fn_method_ffinfcreader_data_from_records(void*_Nonnull ptr, RustBuffer records, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_IS_RESUMEABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_IS_RESUMEABLE
void uniffi_cove_fn_method_ffinfcreader_is_resumeable(void*_Nonnull ptr, RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_IS_STARTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_IS_STARTED
int8_t uniffi_cove_fn_method_ffinfcreader_is_started(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_MESSAGE_INFO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_MESSAGE_INFO
RustBuffer uniffi_cove_fn_method_ffinfcreader_message_info(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_PARSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_PARSE
RustBuffer uniffi_cove_fn_method_ffinfcreader_parse(void*_Nonnull ptr, RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_STRING_FROM_RECORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FFINFCREADER_STRING_FROM_RECORD
RustBuffer uniffi_cove_fn_method_ffinfcreader_string_from_record(void*_Nonnull ptr, RustBuffer record, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FIATCLIENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FIATCLIENT
void*_Nonnull uniffi_cove_fn_clone_fiatclient(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FIATCLIENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FIATCLIENT
void uniffi_cove_fn_free_fiatclient(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FILEHANDLER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FILEHANDLER
void*_Nonnull uniffi_cove_fn_clone_filehandler(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FILEHANDLER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FILEHANDLER
void uniffi_cove_fn_free_filehandler(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FILEHANDLER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FILEHANDLER_NEW
void*_Nonnull uniffi_cove_fn_constructor_filehandler_new(RustBuffer file_path, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FILEHANDLER_READ
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FILEHANDLER_READ
RustBuffer uniffi_cove_fn_method_filehandler_read(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FINGERPRINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FINGERPRINT
void*_Nonnull uniffi_cove_fn_clone_fingerprint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FINGERPRINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FINGERPRINT
void uniffi_cove_fn_free_fingerprint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FINGERPRINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_FINGERPRINT_NEW
void*_Nonnull uniffi_cove_fn_constructor_fingerprint_new(RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FINGERPRINT_AS_LOWERCASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FINGERPRINT_AS_LOWERCASE
RustBuffer uniffi_cove_fn_method_fingerprint_as_lowercase(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FINGERPRINT_AS_UPPERCASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_FINGERPRINT_AS_UPPERCASE
RustBuffer uniffi_cove_fn_method_fingerprint_as_uppercase(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FOUNDJSON
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_FOUNDJSON
void*_Nonnull uniffi_cove_fn_clone_foundjson(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FOUNDJSON
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_FOUNDJSON
void uniffi_cove_fn_free_foundjson(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_GLOBALCONFIGTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_GLOBALCONFIGTABLE
void*_Nonnull uniffi_cove_fn_clone_globalconfigtable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_GLOBALCONFIGTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_GLOBALCONFIGTABLE
void uniffi_cove_fn_free_globalconfigtable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_AUTHTYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_AUTHTYPE
RustBuffer uniffi_cove_fn_method_globalconfigtable_authtype(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_CLEAR_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_CLEAR_SELECTED_WALLET
void uniffi_cove_fn_method_globalconfigtable_clear_selected_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_COLORSCHEME
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_COLORSCHEME
RustBuffer uniffi_cove_fn_method_globalconfigtable_colorscheme(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_DELETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_DELETE
void uniffi_cove_fn_method_globalconfigtable_delete(void*_Nonnull ptr, RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_DELETE_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_DELETE_HASHED_PIN_CODE
void uniffi_cove_fn_method_globalconfigtable_delete_hashed_pin_code(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_GET
RustBuffer uniffi_cove_fn_method_globalconfigtable_get(void*_Nonnull ptr, RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_HASHED_PIN_CODE
RustBuffer uniffi_cove_fn_method_globalconfigtable_hashed_pin_code(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_IS_IN_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_IS_IN_DECOY_MODE
int8_t uniffi_cove_fn_method_globalconfigtable_is_in_decoy_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_IS_IN_MAIN_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_IS_IN_MAIN_MODE
int8_t uniffi_cove_fn_method_globalconfigtable_is_in_main_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECT_WALLET
void uniffi_cove_fn_method_globalconfigtable_select_wallet(void*_Nonnull ptr, RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTEDFIATCURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTEDFIATCURRENCY
RustBuffer uniffi_cove_fn_method_globalconfigtable_selectedfiatcurrency(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_NETWORK
RustBuffer uniffi_cove_fn_method_globalconfigtable_selected_network(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_NODE
RustBuffer uniffi_cove_fn_method_globalconfigtable_selected_node(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SELECTED_WALLET
RustBuffer uniffi_cove_fn_method_globalconfigtable_selected_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET
void uniffi_cove_fn_method_globalconfigtable_set(void*_Nonnull ptr, RustBuffer key, RustBuffer value, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SETCOLORSCHEME
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SETCOLORSCHEME
void uniffi_cove_fn_method_globalconfigtable_setcolorscheme(void*_Nonnull ptr, RustBuffer color_scheme, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_HASHED_PIN_CODE
void uniffi_cove_fn_method_globalconfigtable_set_hashed_pin_code(void*_Nonnull ptr, RustBuffer hashed_pin_code, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NETWORK
void uniffi_cove_fn_method_globalconfigtable_set_selected_network(void*_Nonnull ptr, RustBuffer network, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NODE
void uniffi_cove_fn_method_globalconfigtable_set_selected_node(void*_Nonnull ptr, RustBuffer node, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_WALLET_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALCONFIGTABLE_WALLET_MODE
RustBuffer uniffi_cove_fn_method_globalconfigtable_wallet_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_GLOBALFLAGTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_GLOBALFLAGTABLE
void*_Nonnull uniffi_cove_fn_clone_globalflagtable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_GLOBALFLAGTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_GLOBALFLAGTABLE
void uniffi_cove_fn_free_globalflagtable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_GET
int8_t uniffi_cove_fn_method_globalflagtable_get(void*_Nonnull ptr, RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_GET_BOOL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_GET_BOOL_CONFIG
int8_t uniffi_cove_fn_method_globalflagtable_get_bool_config(void*_Nonnull ptr, RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_SET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_SET
void uniffi_cove_fn_method_globalflagtable_set(void*_Nonnull ptr, RustBuffer key, int8_t value, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_TOGGLE_BOOL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_GLOBALFLAGTABLE_TOGGLE_BOOL_CONFIG
void uniffi_cove_fn_method_globalflagtable_toggle_bool_config(void*_Nonnull ptr, RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HARDWAREEXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HARDWAREEXPORT
void*_Nonnull uniffi_cove_fn_clone_hardwareexport(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HARDWAREEXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HARDWAREEXPORT
void uniffi_cove_fn_free_hardwareexport(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HEADERICONPRESENTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HEADERICONPRESENTER
void*_Nonnull uniffi_cove_fn_clone_headericonpresenter(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HEADERICONPRESENTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HEADERICONPRESENTER
void uniffi_cove_fn_free_headericonpresenter(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_HEADERICONPRESENTER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_HEADERICONPRESENTER_NEW
void*_Nonnull uniffi_cove_fn_constructor_headericonpresenter_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_BACKGROUND_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_BACKGROUND_COLOR
RustBuffer uniffi_cove_fn_method_headericonpresenter_background_color(void*_Nonnull ptr, RustBuffer state, RustBuffer direction, RustBuffer color_scheme, int64_t confirmation_count, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_ICON_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_ICON_COLOR
RustBuffer uniffi_cove_fn_method_headericonpresenter_icon_color(void*_Nonnull ptr, RustBuffer state, RustBuffer direction, RustBuffer color_scheme, int64_t confirmation_count, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_RING_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_HEADERICONPRESENTER_RING_COLOR
RustBuffer uniffi_cove_fn_method_headericonpresenter_ring_color(void*_Nonnull ptr, RustBuffer state, RustBuffer color_scheme, RustBuffer direction, int64_t confirmations, int64_t ring_number, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HISTORICALPRICETABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HISTORICALPRICETABLE
void*_Nonnull uniffi_cove_fn_clone_historicalpricetable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HISTORICALPRICETABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HISTORICALPRICETABLE
void uniffi_cove_fn_free_historicalpricetable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HISTORICALPRICESRESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_HISTORICALPRICESRESPONSE
void*_Nonnull uniffi_cove_fn_clone_historicalpricesresponse(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HISTORICALPRICESRESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_HISTORICALPRICESRESPONSE
void uniffi_cove_fn_free_historicalpricesresponse(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_INPUTOUTPUTDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_INPUTOUTPUTDETAILS
void*_Nonnull uniffi_cove_fn_clone_inputoutputdetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_INPUTOUTPUTDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_INPUTOUTPUTDETAILS
void uniffi_cove_fn_free_inputoutputdetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_KEYCHAIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_KEYCHAIN
void*_Nonnull uniffi_cove_fn_clone_keychain(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_KEYCHAIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_KEYCHAIN
void uniffi_cove_fn_free_keychain(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_KEYCHAIN_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_KEYCHAIN_NEW
void*_Nonnull uniffi_cove_fn_constructor_keychain_new(uint64_t keychain, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_LABELMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_LABELMANAGER
void*_Nonnull uniffi_cove_fn_clone_labelmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_LABELMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_LABELMANAGER
void uniffi_cove_fn_free_labelmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_LABELMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_LABELMANAGER_NEW
void*_Nonnull uniffi_cove_fn_constructor_labelmanager_new(RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_DELETE_LABELS_FOR_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_DELETE_LABELS_FOR_TXN
void uniffi_cove_fn_method_labelmanager_delete_labels_for_txn(void*_Nonnull ptr, void*_Nonnull tx_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_EXPORT
RustBuffer uniffi_cove_fn_method_labelmanager_export(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_EXPORT_DEFAULT_FILE_NAME
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_EXPORT_DEFAULT_FILE_NAME
RustBuffer uniffi_cove_fn_method_labelmanager_export_default_file_name(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_HAS_LABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_HAS_LABELS
int8_t uniffi_cove_fn_method_labelmanager_has_labels(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_IMPORT
void uniffi_cove_fn_method_labelmanager_import(void*_Nonnull ptr, RustBuffer jsonl, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_IMPORTLABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_IMPORTLABELS
void uniffi_cove_fn_method_labelmanager_importlabels(void*_Nonnull ptr, void*_Nonnull labels, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_INSERT_OR_UPDATE_LABELS_FOR_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_INSERT_OR_UPDATE_LABELS_FOR_TXN
void uniffi_cove_fn_method_labelmanager_insert_or_update_labels_for_txn(void*_Nonnull ptr, void*_Nonnull details, RustBuffer label, RustBuffer origin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_TRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_LABELMANAGER_TRANSACTION_LABEL
RustBuffer uniffi_cove_fn_method_labelmanager_transaction_label(void*_Nonnull ptr, void*_Nonnull tx_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_LABELSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_LABELSTABLE
void*_Nonnull uniffi_cove_fn_clone_labelstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_LABELSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_LABELSTABLE
void uniffi_cove_fn_free_labelstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_MNEMONIC
void*_Nonnull uniffi_cove_fn_clone_mnemonic(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_MNEMONIC
void uniffi_cove_fn_free_mnemonic(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MNEMONIC_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MNEMONIC_NEW
void*_Nonnull uniffi_cove_fn_constructor_mnemonic_new(RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MNEMONIC_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MNEMONIC_PREVIEW
void*_Nonnull uniffi_cove_fn_constructor_mnemonic_preview(RustBuffer number_of_bip39_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MNEMONIC_ALL_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MNEMONIC_ALL_WORDS
RustBuffer uniffi_cove_fn_method_mnemonic_all_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MNEMONIC_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MNEMONIC_WORDS
RustBuffer uniffi_cove_fn_method_mnemonic_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_MULTIQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_MULTIQR
void*_Nonnull uniffi_cove_fn_clone_multiqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_MULTIQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_MULTIQR
void uniffi_cove_fn_free_multiqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_NEW_FROM_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_NEW_FROM_STRING
void*_Nonnull uniffi_cove_fn_constructor_multiqr_new_from_string(RustBuffer qr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_TRY_NEW
void*_Nonnull uniffi_cove_fn_constructor_multiqr_try_new(RustBuffer qr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_TRY_NEW_FROM_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_MULTIQR_TRY_NEW_FROM_DATA
void*_Nonnull uniffi_cove_fn_constructor_multiqr_try_new_from_data(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_ADD_PART
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_ADD_PART
void*_Nonnull uniffi_cove_fn_method_multiqr_add_part(void*_Nonnull ptr, RustBuffer qr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_GET_GROUPED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_GET_GROUPED_WORDS
RustBuffer uniffi_cove_fn_method_multiqr_get_grouped_words(void*_Nonnull ptr, RustBuffer qr, uint8_t groups_of, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_HANDLE_SCAN_RESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_HANDLE_SCAN_RESULT
RustBuffer uniffi_cove_fn_method_multiqr_handle_scan_result(void*_Nonnull ptr, RustBuffer qr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_IS_BBQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_IS_BBQR
int8_t uniffi_cove_fn_method_multiqr_is_bbqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_IS_SEED_QR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_IS_SEED_QR
int8_t uniffi_cove_fn_method_multiqr_is_seed_qr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_TOTAL_PARTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_MULTIQR_TOTAL_PARTS
uint32_t uniffi_cove_fn_method_multiqr_total_parts(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NDEFRECORDREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NDEFRECORDREADER
void*_Nonnull uniffi_cove_fn_clone_ndefrecordreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NDEFRECORDREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NDEFRECORDREADER
void uniffi_cove_fn_free_ndefrecordreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NDEFRECORDREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NDEFRECORDREADER_NEW
void*_Nonnull uniffi_cove_fn_constructor_ndefrecordreader_new(RustBuffer record, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NDEFRECORDREADER_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NDEFRECORDREADER_ID
RustBuffer uniffi_cove_fn_method_ndefrecordreader_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NDEFRECORDREADER_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NDEFRECORDREADER_TYPE
RustBuffer uniffi_cove_fn_method_ndefrecordreader_type_(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NFCCONST
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NFCCONST
void*_Nonnull uniffi_cove_fn_clone_nfcconst(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NFCCONST
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NFCCONST
void uniffi_cove_fn_free_nfcconst(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NFCCONST_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NFCCONST_NEW
void*_Nonnull uniffi_cove_fn_constructor_nfcconst_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_BYTES_PER_BLOCK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_BYTES_PER_BLOCK
uint16_t uniffi_cove_fn_method_nfcconst_bytes_per_block(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_NUMBER_OF_BLOCKS_PER_CHUNK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_NUMBER_OF_BLOCKS_PER_CHUNK
uint16_t uniffi_cove_fn_method_nfcconst_number_of_blocks_per_chunk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_TOTAL_BYTES_PER_CHUNK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCCONST_TOTAL_BYTES_PER_CHUNK
uint16_t uniffi_cove_fn_method_nfcconst_total_bytes_per_chunk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NFCMESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NFCMESSAGE
void*_Nonnull uniffi_cove_fn_clone_nfcmessage(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NFCMESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NFCMESSAGE
void uniffi_cove_fn_free_nfcmessage(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NFCMESSAGE_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NFCMESSAGE_TRY_NEW
void*_Nonnull uniffi_cove_fn_constructor_nfcmessage_try_new(RustBuffer string, RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_DATA
RustBuffer uniffi_cove_fn_method_nfcmessage_data(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_STRING
RustBuffer uniffi_cove_fn_method_nfcmessage_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_TRY_INTO_MULTI_FORMAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NFCMESSAGE_TRY_INTO_MULTI_FORMAT
RustBuffer uniffi_cove_fn_method_nfcmessage_try_into_multi_format(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NODESELECTOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_NODESELECTOR
void*_Nonnull uniffi_cove_fn_clone_nodeselector(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NODESELECTOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_NODESELECTOR
void uniffi_cove_fn_free_nodeselector(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NODESELECTOR_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_NODESELECTOR_NEW
void*_Nonnull uniffi_cove_fn_constructor_nodeselector_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_CHECK_AND_SAVE_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_CHECK_AND_SAVE_NODE
uint64_t uniffi_cove_fn_method_nodeselector_check_and_save_node(void*_Nonnull ptr, RustBuffer node
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_CHECK_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_CHECK_SELECTED_NODE
uint64_t uniffi_cove_fn_method_nodeselector_check_selected_node(void*_Nonnull ptr, RustBuffer node
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_NODE_LIST
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_NODE_LIST
RustBuffer uniffi_cove_fn_method_nodeselector_node_list(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_PARSE_CUSTOM_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_PARSE_CUSTOM_NODE
RustBuffer uniffi_cove_fn_method_nodeselector_parse_custom_node(void*_Nonnull ptr, RustBuffer url, RustBuffer name, RustBuffer entered_name, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_SELECT_PRESET_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_SELECT_PRESET_NODE
RustBuffer uniffi_cove_fn_method_nodeselector_select_preset_node(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_NODESELECTOR_SELECTED_NODE
RustBuffer uniffi_cove_fn_method_nodeselector_selected_node(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_OUTPOINT
void*_Nonnull uniffi_cove_fn_clone_outpoint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_OUTPOINT
void uniffi_cove_fn_free_outpoint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PENDINGWALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PENDINGWALLET
void*_Nonnull uniffi_cove_fn_clone_pendingwallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PENDINGWALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PENDINGWALLET
void uniffi_cove_fn_free_pendingwallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PRICERESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PRICERESPONSE
void*_Nonnull uniffi_cove_fn_clone_priceresponse(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PRICERESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PRICERESPONSE
void uniffi_cove_fn_free_priceresponse(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PRICERESPONSE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PRICERESPONSE_GET
uint64_t uniffi_cove_fn_method_priceresponse_get(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PRICERESPONSE_GET_FOR_CURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PRICERESPONSE_GET_FOR_CURRENCY
uint64_t uniffi_cove_fn_method_priceresponse_get_for_currency(void*_Nonnull ptr, RustBuffer currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PSBT
void*_Nonnull uniffi_cove_fn_clone_psbt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PSBT
void uniffi_cove_fn_free_psbt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_PSBT_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_PSBT_NEW
void*_Nonnull uniffi_cove_fn_constructor_psbt_new(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_FEE
void*_Nonnull uniffi_cove_fn_method_psbt_fee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_OUTPUT_TOTAL_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_OUTPUT_TOTAL_AMOUNT
void*_Nonnull uniffi_cove_fn_method_psbt_output_total_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_TX_ID
void*_Nonnull uniffi_cove_fn_method_psbt_tx_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_WEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_PSBT_WEIGHT
uint64_t uniffi_cove_fn_method_psbt_weight(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PUSHTX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_PUSHTX
void*_Nonnull uniffi_cove_fn_clone_pushtx(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PUSHTX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_PUSHTX
void uniffi_cove_fn_free_pushtx(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ROUTEFACTORY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_ROUTEFACTORY
void*_Nonnull uniffi_cove_fn_clone_routefactory(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ROUTEFACTORY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_ROUTEFACTORY
void uniffi_cove_fn_free_routefactory(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ROUTEFACTORY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_ROUTEFACTORY_NEW
void*_Nonnull uniffi_cove_fn_constructor_routefactory_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_COLD_WALLET_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_COLD_WALLET_IMPORT
RustBuffer uniffi_cove_fn_method_routefactory_cold_wallet_import(void*_Nonnull ptr, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_HOT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_HOT_WALLET
RustBuffer uniffi_cove_fn_method_routefactory_hot_wallet(void*_Nonnull ptr, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_HOT_WALLET_IMPORT_FROM_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_HOT_WALLET_IMPORT_FROM_SCAN
RustBuffer uniffi_cove_fn_method_routefactory_hot_wallet_import_from_scan(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_IS_SAME_PARENT_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_IS_SAME_PARENT_ROUTE
int8_t uniffi_cove_fn_method_routefactory_is_same_parent_route(void*_Nonnull ptr, RustBuffer route, RustBuffer route_to_check, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_NESTED_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_NESTED_TO
RustBuffer uniffi_cove_fn_method_routefactory_load_and_reset_nested_to(void*_Nonnull ptr, RustBuffer default_route, RustBuffer nested_routes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO
RustBuffer uniffi_cove_fn_method_routefactory_load_and_reset_to(void*_Nonnull ptr, RustBuffer reset_to, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO_AFTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO_AFTER
RustBuffer uniffi_cove_fn_method_routefactory_load_and_reset_to_after(void*_Nonnull ptr, RustBuffer reset_to, uint32_t time, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_MAIN_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_MAIN_WALLET_SETTINGS
RustBuffer uniffi_cove_fn_method_routefactory_main_wallet_settings(void*_Nonnull ptr, RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NESTED_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NESTED_SETTINGS
RustBuffer uniffi_cove_fn_method_routefactory_nested_settings(void*_Nonnull ptr, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NESTED_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NESTED_WALLET_SETTINGS
RustBuffer uniffi_cove_fn_method_routefactory_nested_wallet_settings(void*_Nonnull ptr, RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NEW_HOT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NEW_HOT_WALLET
RustBuffer uniffi_cove_fn_method_routefactory_new_hot_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NEW_WALLET_SELECT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_NEW_WALLET_SELECT
RustBuffer uniffi_cove_fn_method_routefactory_new_wallet_select(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_QR_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_QR_IMPORT
RustBuffer uniffi_cove_fn_method_routefactory_qr_import(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SECRET_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SECRET_WORDS
RustBuffer uniffi_cove_fn_method_routefactory_secret_words(void*_Nonnull ptr, RustBuffer wallet_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND
RustBuffer uniffi_cove_fn_method_routefactory_send(void*_Nonnull ptr, RustBuffer send, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_CONFIRM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_CONFIRM
RustBuffer uniffi_cove_fn_method_routefactory_send_confirm(void*_Nonnull ptr, RustBuffer id, void*_Nonnull details, RustBuffer signed_transaction, RustBuffer signed_psbt, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_HARDWARE_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_HARDWARE_EXPORT
RustBuffer uniffi_cove_fn_method_routefactory_send_hardware_export(void*_Nonnull ptr, RustBuffer id, void*_Nonnull details, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_SET_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_SEND_SET_AMOUNT
RustBuffer uniffi_cove_fn_method_routefactory_send_set_amount(void*_Nonnull ptr, RustBuffer id, RustBuffer address, RustBuffer amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_ROUTEFACTORY_WALLET_SETTINGS
RustBuffer uniffi_cove_fn_method_routefactory_wallet_settings(void*_Nonnull ptr, RustBuffer id, RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTAUTHMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTAUTHMANAGER
void*_Nonnull uniffi_cove_fn_clone_rustauthmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTAUTHMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTAUTHMANAGER
void uniffi_cove_fn_free_rustauthmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTAUTHMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTAUTHMANAGER_NEW
void*_Nonnull uniffi_cove_fn_constructor_rustauthmanager_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_AUTH_TYPE
RustBuffer uniffi_cove_fn_method_rustauthmanager_auth_type(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_CHECKDECOYPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_CHECKDECOYPIN
int8_t uniffi_cove_fn_method_rustauthmanager_checkdecoypin(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_CHECKWIPEDATAPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_CHECKWIPEDATAPIN
int8_t uniffi_cove_fn_method_rustauthmanager_checkwipedatapin(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DELETE_DECOY_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DELETE_DECOY_PIN
void uniffi_cove_fn_method_rustauthmanager_delete_decoy_pin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DELETE_WIPE_DATA_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DELETE_WIPE_DATA_PIN
void uniffi_cove_fn_method_rustauthmanager_delete_wipe_data_pin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_DISPATCH
void uniffi_cove_fn_method_rustauthmanager_dispatch(void*_Nonnull ptr, RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_DECOY_PIN_ENABLED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_DECOY_PIN_ENABLED
int8_t uniffi_cove_fn_method_rustauthmanager_is_decoy_pin_enabled(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_IN_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_IN_DECOY_MODE
int8_t uniffi_cove_fn_method_rustauthmanager_is_in_decoy_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_WIPE_DATA_PIN_ENABLED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_IS_WIPE_DATA_PIN_ENABLED
int8_t uniffi_cove_fn_method_rustauthmanager_is_wipe_data_pin_enabled(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_LISTEN_FOR_UPDATES
void uniffi_cove_fn_method_rustauthmanager_listen_for_updates(void*_Nonnull ptr, uint64_t reconciler, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_LOCKED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_LOCKED_AT
RustBuffer uniffi_cove_fn_method_rustauthmanager_locked_at(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SEND
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SEND
void uniffi_cove_fn_method_rustauthmanager_send(void*_Nonnull ptr, RustBuffer message, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_AUTH_TYPE
void uniffi_cove_fn_method_rustauthmanager_set_auth_type(void*_Nonnull ptr, RustBuffer auth_type, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_DECOY_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_DECOY_PIN
void uniffi_cove_fn_method_rustauthmanager_set_decoy_pin(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_LOCKED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_LOCKED_AT
void uniffi_cove_fn_method_rustauthmanager_set_locked_at(void*_Nonnull ptr, uint64_t locked_at, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_WIPE_DATA_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SET_WIPE_DATA_PIN
void uniffi_cove_fn_method_rustauthmanager_set_wipe_data_pin(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SWITCH_TO_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SWITCH_TO_DECOY_MODE
void uniffi_cove_fn_method_rustauthmanager_switch_to_decoy_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SWITCH_TO_MAIN_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_SWITCH_TO_MAIN_MODE
void uniffi_cove_fn_method_rustauthmanager_switch_to_main_mode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_VALIDATE_PIN_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTAUTHMANAGER_VALIDATE_PIN_SETTINGS
void uniffi_cove_fn_method_rustauthmanager_validate_pin_settings(void*_Nonnull ptr, RustBuffer pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTIMPORTWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTIMPORTWALLETMANAGER
void*_Nonnull uniffi_cove_fn_clone_rustimportwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTIMPORTWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTIMPORTWALLETMANAGER
void uniffi_cove_fn_free_rustimportwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTIMPORTWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTIMPORTWALLETMANAGER_NEW
void*_Nonnull uniffi_cove_fn_constructor_rustimportwalletmanager_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_DISPATCH
void uniffi_cove_fn_method_rustimportwalletmanager_dispatch(void*_Nonnull ptr, RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_IMPORT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_IMPORT_WALLET
RustBuffer uniffi_cove_fn_method_rustimportwalletmanager_import_wallet(void*_Nonnull ptr, RustBuffer entered_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTIMPORTWALLETMANAGER_LISTEN_FOR_UPDATES
void uniffi_cove_fn_method_rustimportwalletmanager_listen_for_updates(void*_Nonnull ptr, uint64_t reconciler, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTPENDINGWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTPENDINGWALLETMANAGER
void*_Nonnull uniffi_cove_fn_clone_rustpendingwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTPENDINGWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTPENDINGWALLETMANAGER
void uniffi_cove_fn_free_rustpendingwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTPENDINGWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTPENDINGWALLETMANAGER_NEW
void*_Nonnull uniffi_cove_fn_constructor_rustpendingwalletmanager_new(RustBuffer number_of_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS
RustBuffer uniffi_cove_fn_method_rustpendingwalletmanager_bip_39_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS_GROUPED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS_GROUPED
RustBuffer uniffi_cove_fn_method_rustpendingwalletmanager_bip_39_words_grouped(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_CARD_INDEXES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_CARD_INDEXES
uint8_t uniffi_cove_fn_method_rustpendingwalletmanager_card_indexes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_DISPATCH
void uniffi_cove_fn_method_rustpendingwalletmanager_dispatch(void*_Nonnull ptr, RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_GET_STATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_GET_STATE
RustBuffer uniffi_cove_fn_method_rustpendingwalletmanager_get_state(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_LISTEN_FOR_UPDATES
void uniffi_cove_fn_method_rustpendingwalletmanager_listen_for_updates(void*_Nonnull ptr, uint64_t reconciler, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_NUMBER_OF_WORDS_COUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_NUMBER_OF_WORDS_COUNT
uint8_t uniffi_cove_fn_method_rustpendingwalletmanager_number_of_words_count(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_SAVE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTPENDINGWALLETMANAGER_SAVE_WALLET
RustBuffer uniffi_cove_fn_method_rustpendingwalletmanager_save_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_RUSTWALLETMANAGER
void*_Nonnull uniffi_cove_fn_clone_rustwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTWALLETMANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_RUSTWALLETMANAGER
void uniffi_cove_fn_free_rustwalletmanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_NEW
void*_Nonnull uniffi_cove_fn_constructor_rustwalletmanager_new(RustBuffer id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET
void*_Nonnull uniffi_cove_fn_constructor_rustwalletmanager_preview_new_wallet(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET_WITH_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET_WITH_METADATA
void*_Nonnull uniffi_cove_fn_constructor_rustwalletmanager_preview_new_wallet_with_metadata(RustBuffer metadata, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_TAP_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_TAP_SIGNER
void*_Nonnull uniffi_cove_fn_constructor_rustwalletmanager_try_new_from_tap_signer(void*_Nonnull tap_signer, RustBuffer derive_info, RustBuffer backup, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_XPUB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_XPUB
void*_Nonnull uniffi_cove_fn_constructor_rustwalletmanager_try_new_from_xpub(RustBuffer xpub, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_ADDRESS_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_ADDRESS_AT
uint64_t uniffi_cove_fn_method_rustwalletmanager_address_at(void*_Nonnull ptr, uint32_t index
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_AMOUNT_IN_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_AMOUNT_IN_FIAT
uint64_t uniffi_cove_fn_method_rustwalletmanager_amount_in_fiat(void*_Nonnull ptr, void*_Nonnull amount
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BALANCE
uint64_t uniffi_cove_fn_method_rustwalletmanager_balance(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BALANCE_IN_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BALANCE_IN_FIAT
uint64_t uniffi_cove_fn_method_rustwalletmanager_balance_in_fiat(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BROADCAST_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BROADCAST_TRANSACTION
uint64_t uniffi_cove_fn_method_rustwalletmanager_broadcast_transaction(void*_Nonnull ptr, void*_Nonnull signed_transaction
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_DRAIN_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_DRAIN_TRANSACTION
uint64_t uniffi_cove_fn_method_rustwalletmanager_build_drain_transaction(void*_Nonnull ptr, void*_Nonnull address, void*_Nonnull fee
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION
uint64_t uniffi_cove_fn_method_rustwalletmanager_build_transaction(void*_Nonnull ptr, void*_Nonnull amount, void*_Nonnull address
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION_WITH_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION_WITH_FEE_RATE
uint64_t uniffi_cove_fn_method_rustwalletmanager_build_transaction_with_fee_rate(void*_Nonnull ptr, void*_Nonnull amount, void*_Nonnull address, void*_Nonnull fee_rate
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONFIRM_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONFIRM_TXN
uint64_t uniffi_cove_fn_method_rustwalletmanager_confirm_txn(void*_Nonnull ptr, void*_Nonnull amount, void*_Nonnull address, void*_Nonnull fee_rate
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_AND_DISPLAY_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_AND_DISPLAY_FIAT
RustBuffer uniffi_cove_fn_method_rustwalletmanager_convert_and_display_fiat(void*_Nonnull ptr, void*_Nonnull amount, void*_Nonnull prices, int8_t with_suffix, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_FROM_FIAT_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_FROM_FIAT_STRING
void*_Nonnull uniffi_cove_fn_method_rustwalletmanager_convert_from_fiat_string(void*_Nonnull ptr, RustBuffer fiat_amount, void*_Nonnull prices, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_TO_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CONVERT_TO_FIAT
double uniffi_cove_fn_method_rustwalletmanager_convert_to_fiat(void*_Nonnull ptr, void*_Nonnull amount, void*_Nonnull prices, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CURRENT_BLOCK_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_CURRENT_BLOCK_HEIGHT
uint64_t uniffi_cove_fn_method_rustwalletmanager_current_block_height(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DELETE_UNSIGNED_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DELETE_UNSIGNED_TRANSACTION
void uniffi_cove_fn_method_rustwalletmanager_delete_unsigned_transaction(void*_Nonnull ptr, void*_Nonnull tx_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DELETE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DELETE_WALLET
void uniffi_cove_fn_method_rustwalletmanager_delete_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPATCH
void uniffi_cove_fn_method_rustwalletmanager_dispatch(void*_Nonnull ptr, RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_AMOUNT
RustBuffer uniffi_cove_fn_method_rustwalletmanager_display_amount(void*_Nonnull ptr, void*_Nonnull amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_FIAT_AMOUNT
RustBuffer uniffi_cove_fn_method_rustwalletmanager_display_fiat_amount(void*_Nonnull ptr, double amount, int8_t with_suffix, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_SENT_AND_RECEIVED_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_DISPLAY_SENT_AND_RECEIVED_AMOUNT
RustBuffer uniffi_cove_fn_method_rustwalletmanager_display_sent_and_received_amount(void*_Nonnull ptr, void*_Nonnull sent_and_received, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS
uint64_t uniffi_cove_fn_method_rustwalletmanager_fee_rate_options(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE
uint64_t uniffi_cove_fn_method_rustwalletmanager_fee_rate_options_with_total_fee(void*_Nonnull ptr, RustBuffer fee_rate_options, void*_Nonnull amount, void*_Nonnull address
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_FOR_DRAIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_FOR_DRAIN
uint64_t uniffi_cove_fn_method_rustwalletmanager_fee_rate_options_with_total_fee_for_drain(void*_Nonnull ptr, void*_Nonnull fee_rate_options, void*_Nonnull address
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FEES
RustBuffer uniffi_cove_fn_method_rustwalletmanager_fees(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FINALIZE_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FINALIZE_PSBT
uint64_t uniffi_cove_fn_method_rustwalletmanager_finalize_psbt(void*_Nonnull ptr, void*_Nonnull psbt
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FORCE_UPDATE_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FORCE_UPDATE_HEIGHT
uint64_t uniffi_cove_fn_method_rustwalletmanager_force_update_height(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FORCE_WALLET_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_FORCE_WALLET_SCAN
uint64_t uniffi_cove_fn_method_rustwalletmanager_force_wallet_scan(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_FEE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_FEE_OPTIONS
uint64_t uniffi_cove_fn_method_rustwalletmanager_get_fee_options(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_TRANSACTIONS
uint64_t uniffi_cove_fn_method_rustwalletmanager_get_transactions(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_UNSIGNED_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_GET_UNSIGNED_TRANSACTIONS
RustBuffer uniffi_cove_fn_method_rustwalletmanager_get_unsigned_transactions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_LABEL_MANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_LABEL_MANAGER
void*_Nonnull uniffi_cove_fn_method_rustwalletmanager_label_manager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_LISTEN_FOR_UPDATES
void uniffi_cove_fn_method_rustwalletmanager_listen_for_updates(void*_Nonnull ptr, uint64_t reconciler, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_MARK_WALLET_AS_VERIFIED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_MARK_WALLET_AS_VERIFIED
void uniffi_cove_fn_method_rustwalletmanager_mark_wallet_as_verified(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_MASTER_FINGERPRINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_MASTER_FINGERPRINT
RustBuffer uniffi_cove_fn_method_rustwalletmanager_master_fingerprint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NEXT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NEXT_ADDRESS
uint64_t uniffi_cove_fn_method_rustwalletmanager_next_address(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS
uint64_t uniffi_cove_fn_method_rustwalletmanager_number_of_confirmations(void*_Nonnull ptr, uint32_t block_height
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS_FMT
uint64_t uniffi_cove_fn_method_rustwalletmanager_number_of_confirmations_fmt(void*_Nonnull ptr, uint32_t block_height
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SAVE_UNSIGNED_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SAVE_UNSIGNED_TRANSACTION
void uniffi_cove_fn_method_rustwalletmanager_save_unsigned_transaction(void*_Nonnull ptr, void*_Nonnull details, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SELECTED_FIAT_CURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SELECTED_FIAT_CURRENCY
RustBuffer uniffi_cove_fn_method_rustwalletmanager_selected_fiat_currency(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SENT_AND_RECEIVED_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SENT_AND_RECEIVED_FIAT
uint64_t uniffi_cove_fn_method_rustwalletmanager_sent_and_received_fiat(void*_Nonnull ptr, void*_Nonnull sent_and_received
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SET_WALLET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SET_WALLET_METADATA
void uniffi_cove_fn_method_rustwalletmanager_set_wallet_metadata(void*_Nonnull ptr, RustBuffer metadata, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SIGN_AND_BROADCAST_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SIGN_AND_BROADCAST_TRANSACTION
uint64_t uniffi_cove_fn_method_rustwalletmanager_sign_and_broadcast_transaction(void*_Nonnull ptr, void*_Nonnull psbt
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SPLIT_TRANSACTION_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SPLIT_TRANSACTION_OUTPUTS
uint64_t uniffi_cove_fn_method_rustwalletmanager_split_transaction_outputs(void*_Nonnull ptr, RustBuffer outputs
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_START_WALLET_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_START_WALLET_SCAN
uint64_t uniffi_cove_fn_method_rustwalletmanager_start_wallet_scan(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SWITCH_TO_DIFFERENT_WALLET_ADDRESS_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_SWITCH_TO_DIFFERENT_WALLET_ADDRESS_TYPE
uint64_t uniffi_cove_fn_method_rustwalletmanager_switch_to_different_wallet_address_type(void*_Nonnull ptr, RustBuffer wallet_address_type
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_TRANSACTION_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_TRANSACTION_DETAILS
uint64_t uniffi_cove_fn_method_rustwalletmanager_transaction_details(void*_Nonnull ptr, void*_Nonnull tx_id
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_VALIDATE_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_VALIDATE_METADATA
void uniffi_cove_fn_method_rustwalletmanager_validate_metadata(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_WALLET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_WALLET_METADATA
RustBuffer uniffi_cove_fn_method_rustwalletmanager_wallet_metadata(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_WORD_VALIDATOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_RUSTWALLETMANAGER_WORD_VALIDATOR
void*_Nonnull uniffi_cove_fn_method_rustwalletmanager_word_validator(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SEEDQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SEEDQR
void*_Nonnull uniffi_cove_fn_clone_seedqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SEEDQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SEEDQR
void uniffi_cove_fn_free_seedqr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SEEDQR_NEW_FROM_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SEEDQR_NEW_FROM_DATA
void*_Nonnull uniffi_cove_fn_constructor_seedqr_new_from_data(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SEEDQR_NEW_FROM_STR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SEEDQR_NEW_FROM_STR
void*_Nonnull uniffi_cove_fn_constructor_seedqr_new_from_str(RustBuffer qr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SEEDQR_GET_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SEEDQR_GET_WORDS
RustBuffer uniffi_cove_fn_method_seedqr_get_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SEEDQR_GROUPED_PLAIN_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SEEDQR_GROUPED_PLAIN_WORDS
RustBuffer uniffi_cove_fn_method_seedqr_grouped_plain_words(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SENDFLOWFIATONCHANGEHANDLER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SENDFLOWFIATONCHANGEHANDLER
void*_Nonnull uniffi_cove_fn_clone_sendflowfiatonchangehandler(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SENDFLOWFIATONCHANGEHANDLER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SENDFLOWFIATONCHANGEHANDLER
void uniffi_cove_fn_free_sendflowfiatonchangehandler(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SENDFLOWFIATONCHANGEHANDLER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SENDFLOWFIATONCHANGEHANDLER_NEW
void*_Nonnull uniffi_cove_fn_constructor_sendflowfiatonchangehandler_new(void*_Nonnull prices, RustBuffer selected_currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENDFLOWFIATONCHANGEHANDLER_ON_CHANGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENDFLOWFIATONCHANGEHANDLER_ON_CHANGE
RustBuffer uniffi_cove_fn_method_sendflowfiatonchangehandler_on_change(void*_Nonnull ptr, RustBuffer old_value, RustBuffer new_value, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SENTANDRECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SENTANDRECEIVED
void*_Nonnull uniffi_cove_fn_clone_sentandreceived(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SENTANDRECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SENTANDRECEIVED
void uniffi_cove_fn_free_sentandreceived(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_AMOUNT
void*_Nonnull uniffi_cove_fn_method_sentandreceived_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_AMOUNT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_AMOUNT_FMT
RustBuffer uniffi_cove_fn_method_sentandreceived_amount_fmt(void*_Nonnull ptr, RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_DIRECTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_DIRECTION
RustBuffer uniffi_cove_fn_method_sentandreceived_direction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_EXTERNAL_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_EXTERNAL_SENT
void*_Nonnull uniffi_cove_fn_method_sentandreceived_external_sent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_LABEL
RustBuffer uniffi_cove_fn_method_sentandreceived_label(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_RECEIVED
void*_Nonnull uniffi_cove_fn_method_sentandreceived_received(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_SENTANDRECEIVED_SENT
void*_Nonnull uniffi_cove_fn_method_sentandreceived_sent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SETUPCMD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_SETUPCMD
void*_Nonnull uniffi_cove_fn_clone_setupcmd(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SETUPCMD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_SETUPCMD
void uniffi_cove_fn_free_setupcmd(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SETUPCMD_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_SETUPCMD_TRY_NEW
void*_Nonnull uniffi_cove_fn_constructor_setupcmd_try_new(RustBuffer factory_pin, RustBuffer new_pin, RustBuffer chain_code, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TAPSIGNERREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TAPSIGNERREADER
void*_Nonnull uniffi_cove_fn_clone_tapsignerreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TAPSIGNERREADER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TAPSIGNERREADER
void uniffi_cove_fn_free_tapsignerreader(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TAPSIGNERREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TAPSIGNERREADER_NEW
uint64_t uniffi_cove_fn_constructor_tapsignerreader_new(uint64_t transport, RustBuffer cmd
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_CONTINUE_SETUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_CONTINUE_SETUP
uint64_t uniffi_cove_fn_method_tapsignerreader_continue_setup(void*_Nonnull ptr, RustBuffer response
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_LAST_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_LAST_RESPONSE
RustBuffer uniffi_cove_fn_method_tapsignerreader_last_response(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_RUN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_RUN
uint64_t uniffi_cove_fn_method_tapsignerreader_run(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_SETUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_SETUP
uint64_t uniffi_cove_fn_method_tapsignerreader_setup(void*_Nonnull ptr, void*_Nonnull cmd
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TAPSIGNERREADER_SIGN
uint64_t uniffi_cove_fn_method_tapsignerreader_sign(void*_Nonnull ptr, void*_Nonnull psbt, RustBuffer pin
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TRANSACTIONDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TRANSACTIONDETAILS
void*_Nonnull uniffi_cove_fn_clone_transactiondetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TRANSACTIONDETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TRANSACTIONDETAILS
void uniffi_cove_fn_free_transactiondetails(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_RECEIVED
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_confirmed_received(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_SENT
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_confirmed_sent(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_CONFIRMED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_CONFIRMED
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_new_confirmed(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_WITH_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_WITH_LABEL
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_new_with_label(RustBuffer label, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_RECEIVED
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_pending_received(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_SENT
void*_Nonnull uniffi_cove_fn_constructor_transactiondetails_preview_pending_sent(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_ADDRESS
void*_Nonnull uniffi_cove_fn_method_transactiondetails_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_ADDRESS_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_ADDRESS_SPACED_OUT
RustBuffer uniffi_cove_fn_method_transactiondetails_address_spaced_out(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT
void*_Nonnull uniffi_cove_fn_method_transactiondetails_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT
uint64_t uniffi_cove_fn_method_transactiondetails_amount_fiat(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT_FMT
uint64_t uniffi_cove_fn_method_transactiondetails_amount_fiat_fmt(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_AMOUNT_FMT
RustBuffer uniffi_cove_fn_method_transactiondetails_amount_fmt(void*_Nonnull ptr, RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER
RustBuffer uniffi_cove_fn_method_transactiondetails_block_number(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER_FMT
RustBuffer uniffi_cove_fn_method_transactiondetails_block_number_fmt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_CONFIRMATION_DATE_TIME
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_CONFIRMATION_DATE_TIME
RustBuffer uniffi_cove_fn_method_transactiondetails_confirmation_date_time(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_FEE_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_FEE_FIAT_FMT
uint64_t uniffi_cove_fn_method_transactiondetails_fee_fiat_fmt(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_FEE_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_FEE_FMT
RustBuffer uniffi_cove_fn_method_transactiondetails_fee_fmt(void*_Nonnull ptr, RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_CONFIRMED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_CONFIRMED
int8_t uniffi_cove_fn_method_transactiondetails_is_confirmed(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_RECEIVED
int8_t uniffi_cove_fn_method_transactiondetails_is_received(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_IS_SENT
int8_t uniffi_cove_fn_method_transactiondetails_is_sent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FIAT_FMT
uint64_t uniffi_cove_fn_method_transactiondetails_sent_sans_fee_fiat_fmt(void*_Nonnull ptr
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FMT
RustBuffer uniffi_cove_fn_method_transactiondetails_sent_sans_fee_fmt(void*_Nonnull ptr, RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TRANSACTION_LABEL
RustBuffer uniffi_cove_fn_method_transactiondetails_transaction_label(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TRANSACTION_URL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TRANSACTION_URL
RustBuffer uniffi_cove_fn_method_transactiondetails_transaction_url(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TRANSACTIONDETAILS_TX_ID
void*_Nonnull uniffi_cove_fn_method_transactiondetails_tx_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXID
void*_Nonnull uniffi_cove_fn_clone_txid(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXID
void uniffi_cove_fn_free_txid(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TXID_AS_HASH_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TXID_AS_HASH_STRING
RustBuffer uniffi_cove_fn_method_txid_as_hash_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TXID_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_TXID_IS_EQUAL
int8_t uniffi_cove_fn_method_txid_is_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXIN
void*_Nonnull uniffi_cove_fn_clone_txin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXIN
void uniffi_cove_fn_free_txin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXOUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_TXOUT
void*_Nonnull uniffi_cove_fn_clone_txout(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXOUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_TXOUT
void uniffi_cove_fn_free_txout(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNCONFIRMEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNCONFIRMEDTRANSACTION
void*_Nonnull uniffi_cove_fn_clone_unconfirmedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNCONFIRMEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNCONFIRMEDTRANSACTION
void uniffi_cove_fn_free_unconfirmedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_FIAT_AMOUNT
RustBuffer uniffi_cove_fn_method_unconfirmedtransaction_fiat_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_ID
void*_Nonnull uniffi_cove_fn_method_unconfirmedtransaction_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_LABEL
RustBuffer uniffi_cove_fn_method_unconfirmedtransaction_label(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_LAST_SEEN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_LAST_SEEN
uint64_t uniffi_cove_fn_method_unconfirmedtransaction_last_seen(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_SENT_AND_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNCONFIRMEDTRANSACTION_SENT_AND_RECEIVED
void*_Nonnull uniffi_cove_fn_method_unconfirmedtransaction_sent_and_received(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTION
void*_Nonnull uniffi_cove_fn_clone_unsignedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTION
void uniffi_cove_fn_free_unsignedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_UNSIGNEDTRANSACTION_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_UNSIGNEDTRANSACTION_PREVIEW_NEW
void*_Nonnull uniffi_cove_fn_constructor_unsignedtransaction_preview_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_DETAILS
void*_Nonnull uniffi_cove_fn_method_unsignedtransaction_details(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_ID
void*_Nonnull uniffi_cove_fn_method_unsignedtransaction_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_LABEL
RustBuffer uniffi_cove_fn_method_unsignedtransaction_label(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_SENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_SENDING_AMOUNT
void*_Nonnull uniffi_cove_fn_method_unsignedtransaction_sending_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_SPENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTION_SPENDING_AMOUNT
void*_Nonnull uniffi_cove_fn_method_unsignedtransaction_spending_amount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTIONRECORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTIONRECORD
void*_Nonnull uniffi_cove_fn_clone_unsignedtransactionrecord(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTIONRECORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTIONRECORD
void uniffi_cove_fn_free_unsignedtransactionrecord(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_CONFIRM_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_CONFIRM_DETAILS
void*_Nonnull uniffi_cove_fn_method_unsignedtransactionrecord_confirm_details(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_CREATED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_CREATED_AT
uint64_t uniffi_cove_fn_method_unsignedtransactionrecord_created_at(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_TX_ID
void*_Nonnull uniffi_cove_fn_method_unsignedtransactionrecord_tx_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_WALLET_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONRECORD_WALLET_ID
RustBuffer uniffi_cove_fn_method_unsignedtransactionrecord_wallet_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTIONSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_UNSIGNEDTRANSACTIONSTABLE
void*_Nonnull uniffi_cove_fn_clone_unsignedtransactionstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTIONSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_UNSIGNEDTRANSACTIONSTABLE
void uniffi_cove_fn_free_unsignedtransactionstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTX
RustBuffer uniffi_cove_fn_method_unsignedtransactionstable_gettx(void*_Nonnull ptr, void*_Nonnull tx_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTXTHROW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTXTHROW
void*_Nonnull uniffi_cove_fn_method_unsignedtransactionstable_gettxthrow(void*_Nonnull ptr, void*_Nonnull tx_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLET
void*_Nonnull uniffi_cove_fn_clone_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLET
void uniffi_cove_fn_free_wallet(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_NEW_FROM_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_NEW_FROM_EXPORT
void*_Nonnull uniffi_cove_fn_constructor_wallet_new_from_export(void*_Nonnull export, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_NEW_FROM_XPUB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_NEW_FROM_XPUB
void*_Nonnull uniffi_cove_fn_constructor_wallet_new_from_xpub(RustBuffer xpub, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_PREVIEWNEWWALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WALLET_PREVIEWNEWWALLET
void*_Nonnull uniffi_cove_fn_constructor_wallet_previewnewwallet(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLET_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLET_ID
RustBuffer uniffi_cove_fn_method_wallet_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETDATADB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETDATADB
void*_Nonnull uniffi_cove_fn_clone_walletdatadb(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETDATADB
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETDATADB
void uniffi_cove_fn_free_walletdatadb(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETKEY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETKEY
void*_Nonnull uniffi_cove_fn_clone_walletkey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETKEY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETKEY
void uniffi_cove_fn_free_walletkey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WALLETSTABLE
void*_Nonnull uniffi_cove_fn_clone_walletstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETSTABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WALLETSTABLE
void uniffi_cove_fn_free_walletstable(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_ALL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_ALL
RustBuffer uniffi_cove_fn_method_walletstable_all(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_ALL_SORTED_ACTIVE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_ALL_SORTED_ACTIVE
RustBuffer uniffi_cove_fn_method_walletstable_all_sorted_active(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_IS_EMPTY
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_IS_EMPTY
int8_t uniffi_cove_fn_method_walletstable_is_empty(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_LEN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WALLETSTABLE_LEN
uint16_t uniffi_cove_fn_method_walletstable_len(void*_Nonnull ptr, RustBuffer network, RustBuffer mode, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WORDVALIDATOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CLONE_WORDVALIDATOR
void*_Nonnull uniffi_cove_fn_clone_wordvalidator(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WORDVALIDATOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FREE_WORDVALIDATOR
void uniffi_cove_fn_free_wordvalidator(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WORDVALIDATOR_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_CONSTRUCTOR_WORDVALIDATOR_PREVIEW
void*_Nonnull uniffi_cove_fn_constructor_wordvalidator_preview(int8_t preview, RustBuffer number_of_words, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_IS_COMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_IS_COMPLETE
int8_t uniffi_cove_fn_method_wordvalidator_is_complete(void*_Nonnull ptr, uint8_t word_number, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_IS_WORD_CORRECT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_IS_WORD_CORRECT
int8_t uniffi_cove_fn_method_wordvalidator_is_word_correct(void*_Nonnull ptr, RustBuffer word, uint8_t for_, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_POSSIBLE_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_METHOD_WORDVALIDATOR_POSSIBLE_WORDS
RustBuffer uniffi_cove_fn_method_wordvalidator_possible_words(void*_Nonnull ptr, uint8_t for_, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_AUTHMANAGERRECONCILER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_AUTHMANAGERRECONCILER
void uniffi_cove_fn_init_callback_vtable_authmanagerreconciler(const UniffiVTableCallbackInterfaceAuthManagerReconciler* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_DEVICEACCESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_DEVICEACCESS
void uniffi_cove_fn_init_callback_vtable_deviceaccess(const UniffiVTableCallbackInterfaceDeviceAccess* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_FFIRECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_FFIRECONCILE
void uniffi_cove_fn_init_callback_vtable_ffireconcile(const UniffiVTableCallbackInterfaceFfiReconcile* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_IMPORTWALLETMANAGERRECONCILER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_IMPORTWALLETMANAGERRECONCILER
void uniffi_cove_fn_init_callback_vtable_importwalletmanagerreconciler(const UniffiVTableCallbackInterfaceImportWalletManagerReconciler* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_KEYCHAINACCESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_KEYCHAINACCESS
void uniffi_cove_fn_init_callback_vtable_keychainaccess(const UniffiVTableCallbackInterfaceKeychainAccess* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_PENDINGWALLETMANAGERRECONCILER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_PENDINGWALLETMANAGERRECONCILER
void uniffi_cove_fn_init_callback_vtable_pendingwalletmanagerreconciler(const UniffiVTableCallbackInterfacePendingWalletManagerReconciler* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_TAPCARDTRANSPORTPROTOCOL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_TAPCARDTRANSPORTPROTOCOL
void uniffi_cove_fn_init_callback_vtable_tapcardtransportprotocol(const UniffiVTableCallbackInterfaceTapcardTransportProtocol* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_WALLETMANAGERRECONCILER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_INIT_CALLBACK_VTABLE_WALLETMANAGERRECONCILER
void uniffi_cove_fn_init_callback_vtable_walletmanagerreconciler(const UniffiVTableCallbackInterfaceWalletManagerReconciler* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_EQUAL
int8_t uniffi_cove_fn_func_address_is_equal(void*_Nonnull lhs, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_VALID
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_VALID
void uniffi_cove_fn_func_address_is_valid(RustBuffer address, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_VALID_FOR_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_IS_VALID_FOR_NETWORK
void uniffi_cove_fn_func_address_is_valid_for_network(RustBuffer address, RustBuffer network, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_STRING_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ADDRESS_STRING_SPACED_OUT
RustBuffer uniffi_cove_fn_func_address_string_spaced_out(RustBuffer address, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_AFTER_PIN_ACTION_USER_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_AFTER_PIN_ACTION_USER_MESSAGE
RustBuffer uniffi_cove_fn_func_after_pin_action_user_message(RustBuffer action, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_COLOR_SCHEMES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_COLOR_SCHEMES
RustBuffer uniffi_cove_fn_func_all_color_schemes(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_FIAT_CURRENCIES
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_FIAT_CURRENCIES
RustBuffer uniffi_cove_fn_func_all_fiat_currencies(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_NETWORKS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_NETWORKS
RustBuffer uniffi_cove_fn_func_all_networks(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_UNITS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_ALL_UNITS
RustBuffer uniffi_cove_fn_func_all_units(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_COLOR_SCHEME_SELECTION_CAPITALIZED_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_COLOR_SCHEME_SELECTION_CAPITALIZED_STRING
RustBuffer uniffi_cove_fn_func_color_scheme_selection_capitalized_string(RustBuffer color_scheme, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_CREATE_TRANSPORT_ERROR_FROM_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_CREATE_TRANSPORT_ERROR_FROM_CODE
RustBuffer uniffi_cove_fn_func_create_transport_error_from_code(uint16_t code, RustBuffer message, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DEFAULT_NODE_SELECTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DEFAULT_NODE_SELECTION
RustBuffer uniffi_cove_fn_func_default_node_selection(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DEFAULT_WALLET_COLORS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DEFAULT_WALLET_COLORS
RustBuffer uniffi_cove_fn_func_default_wallet_colors(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_AUTH_MANAGER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_AUTH_MANAGER_ERROR
RustBuffer uniffi_cove_fn_func_describe_auth_manager_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_MULTI_FORMAT_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_MULTI_FORMAT_ERROR
RustBuffer uniffi_cove_fn_func_describe_multi_format_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_SEND_FLOW_FIAT_ON_CHANGE_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_SEND_FLOW_FIAT_ON_CHANGE_ERROR
RustBuffer uniffi_cove_fn_func_describe_send_flow_fiat_on_change_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_TAP_SIGNER_READER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_TAP_SIGNER_READER_ERROR
RustBuffer uniffi_cove_fn_func_describe_tap_signer_reader_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_WALLET_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_WALLET_ERROR
RustBuffer uniffi_cove_fn_func_describe_wallet_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_WALLET_MANAGER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DESCRIBE_WALLET_MANAGER_ERROR
RustBuffer uniffi_cove_fn_func_describe_wallet_manager_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DISCOVERY_STATE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_DISCOVERY_STATE_IS_EQUAL
int8_t uniffi_cove_fn_func_discovery_state_is_equal(RustBuffer lhs, RustBuffer rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_IS_EQUAL
int8_t uniffi_cove_fn_func_fee_rate_options_with_total_fee_is_equal(void*_Nonnull lhs, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_DURATION
RustBuffer uniffi_cove_fn_func_fee_speed_duration(RustBuffer fee_speed, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_IS_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_IS_CUSTOM
int8_t uniffi_cove_fn_func_fee_speed_is_custom(RustBuffer fee_speed, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_TO_CIRCLE_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_TO_CIRCLE_COLOR
RustBuffer uniffi_cove_fn_func_fee_speed_to_circle_color(RustBuffer fee_speed, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FEE_SPEED_TO_STRING
RustBuffer uniffi_cove_fn_func_fee_speed_to_string(RustBuffer fee_speed, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_AMOUNT_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_AMOUNT_PREVIEW_NEW
RustBuffer uniffi_cove_fn_func_fiat_amount_preview_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_EMOJI
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_EMOJI
RustBuffer uniffi_cove_fn_func_fiat_currency_emoji(RustBuffer fiat_currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_SUFFIX
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_SUFFIX
RustBuffer uniffi_cove_fn_func_fiat_currency_suffix(RustBuffer fiat_currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_SYMBOL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_SYMBOL
RustBuffer uniffi_cove_fn_func_fiat_currency_symbol(RustBuffer fiat_currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_FIAT_CURRENCY_TO_STRING
RustBuffer uniffi_cove_fn_func_fiat_currency_to_string(RustBuffer fiat_currency, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_GROUPED_PLAIN_WORDS_OF
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_GROUPED_PLAIN_WORDS_OF
RustBuffer uniffi_cove_fn_func_grouped_plain_words_of(RustBuffer mnemonic, uint8_t groups, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_HARDWARE_WALLET_IS_TAP_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_HARDWARE_WALLET_IS_TAP_SIGNER
int8_t uniffi_cove_fn_func_hardware_wallet_is_tap_signer(RustBuffer hardware_wallet, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_HASH_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_HASH_ROUTE
uint64_t uniffi_cove_fn_func_hash_route(RustBuffer route, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_FIAT_CURRENCY_SYMBOL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_FIAT_CURRENCY_SYMBOL
int8_t uniffi_cove_fn_func_is_fiat_currency_symbol(RustBuffer symbol, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_ROUTE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_ROUTE_EQUAL
int8_t uniffi_cove_fn_func_is_route_equal(RustBuffer route, RustBuffer route_to_check, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_TAP_SIGNER_ROUTE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_TAP_SIGNER_ROUTE_EQUAL
int8_t uniffi_cove_fn_func_is_tap_signer_route_equal(RustBuffer lhs, RustBuffer rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_VALID_CHAIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_IS_VALID_CHAIN_CODE
int8_t uniffi_cove_fn_func_is_valid_chain_code(RustBuffer chain_code, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NETWORK_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NETWORK_TO_STRING
RustBuffer uniffi_cove_fn_func_network_to_string(RustBuffer network, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NFC_MESSAGE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NFC_MESSAGE_IS_EQUAL
int8_t uniffi_cove_fn_func_nfc_message_is_equal(void*_Nonnull lhs, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NODE_SELECTION_TO_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NODE_SELECTION_TO_NODE
RustBuffer uniffi_cove_fn_func_node_selection_to_node(RustBuffer node, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NUMBER_OF_WORDS_IN_GROUPS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NUMBER_OF_WORDS_IN_GROUPS
RustBuffer uniffi_cove_fn_func_number_of_words_in_groups(RustBuffer me, uint8_t of, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NUMBER_OF_WORDS_TO_WORD_COUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_NUMBER_OF_WORDS_TO_WORD_COUNT
uint8_t uniffi_cove_fn_func_number_of_words_to_word_count(RustBuffer me, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PREVIEW_NEW_LEGACY_FOUND_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PREVIEW_NEW_LEGACY_FOUND_ADDRESS
RustBuffer uniffi_cove_fn_func_preview_new_legacy_found_address(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PREVIEW_NEW_WRAPPED_FOUND_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PREVIEW_NEW_WRAPPED_FOUND_ADDRESS
RustBuffer uniffi_cove_fn_func_preview_new_wrapped_found_address(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PRICES_ARE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_PRICES_ARE_EQUAL
int8_t uniffi_cove_fn_func_prices_are_equal(void*_Nonnull lhs, void*_Nonnull rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_STRING_OR_DATA_TRY_INTO_MULTI_FORMAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_STRING_OR_DATA_TRY_INTO_MULTI_FORMAT
RustBuffer uniffi_cove_fn_func_string_or_data_try_into_multi_format(RustBuffer string_or_data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_CONFIRM_PIN_ARGS_NEW_FROM_NEW_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_CONFIRM_PIN_ARGS_NEW_FROM_NEW_PIN
RustBuffer uniffi_cove_fn_func_tap_signer_confirm_pin_args_new_from_new_pin(RustBuffer args, RustBuffer new_pin, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_ERROR_IS_AUTH_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_ERROR_IS_AUTH_ERROR
int8_t uniffi_cove_fn_func_tap_signer_error_is_auth_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_ERROR_IS_NO_BACKUP_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_ERROR_IS_NO_BACKUP_ERROR
int8_t uniffi_cove_fn_func_tap_signer_error_is_no_backup_error(RustBuffer error, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_BACKUP_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_BACKUP_RESPONSE
RustBuffer uniffi_cove_fn_func_tap_signer_response_backup_response(RustBuffer response, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_CHANGE_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_CHANGE_RESPONSE
int8_t uniffi_cove_fn_func_tap_signer_response_change_response(RustBuffer response, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_DERIVE_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_DERIVE_RESPONSE
RustBuffer uniffi_cove_fn_func_tap_signer_response_derive_response(RustBuffer response, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_SETUP_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_SETUP_RESPONSE
RustBuffer uniffi_cove_fn_func_tap_signer_response_setup_response(RustBuffer response, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_SIGN_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_RESPONSE_SIGN_RESPONSE
RustBuffer uniffi_cove_fn_func_tap_signer_response_sign_response(RustBuffer response, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_SETUP_COMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_SETUP_COMPLETE_NEW
RustBuffer uniffi_cove_fn_func_tap_signer_setup_complete_new(int8_t preview, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_SETUP_RETRY_CONTINUE_CMD
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TAP_SIGNER_SETUP_RETRY_CONTINUE_CMD
RustBuffer uniffi_cove_fn_func_tap_signer_setup_retry_continue_cmd(int8_t preview, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTION_PREVIEW_CONFIRMED_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTION_PREVIEW_CONFIRMED_NEW
RustBuffer uniffi_cove_fn_func_transaction_preview_confirmed_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTION_PREVIEW_UNCONFIRMED_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTION_PREVIEW_UNCONFIRMED_NEW
RustBuffer uniffi_cove_fn_func_transaction_preview_unconfirmed_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTIONS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_TRANSACTIONS_PREVIEW_NEW
RustBuffer uniffi_cove_fn_func_transactions_preview_new(uint8_t confirmed, uint8_t unconfirmed, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_UNIT_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_UNIT_TO_STRING
RustBuffer uniffi_cove_fn_func_unit_to_string(RustBuffer unit, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_UPDATE_PRICES_IF_NEEDED
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_UPDATE_PRICES_IF_NEEDED
uint64_t uniffi_cove_fn_func_update_prices_if_needed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_ADDRESS_TYPE_LESS_THAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_ADDRESS_TYPE_LESS_THAN
int8_t uniffi_cove_fn_func_wallet_address_type_less_than(RustBuffer lhs, RustBuffer rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_ADDRESS_TYPE_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_ADDRESS_TYPE_TO_STRING
RustBuffer uniffi_cove_fn_func_wallet_address_type_to_string(RustBuffer wallet_address_type, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_HASH
uint64_t uniffi_cove_fn_func_wallet_metadata_hash(RustBuffer metadata, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_IS_EQUAL
int8_t uniffi_cove_fn_func_wallet_metadata_is_equal(RustBuffer lhs, RustBuffer rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_METADATA_PREVIEW
RustBuffer uniffi_cove_fn_func_wallet_metadata_preview(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_STATE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_STATE_IS_EQUAL
int8_t uniffi_cove_fn_func_wallet_state_is_equal(RustBuffer lhs, RustBuffer rhs, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_TYPE_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_FN_FUNC_WALLET_TYPE_TO_STRING
RustBuffer uniffi_cove_fn_func_wallet_type_to_string(RustBuffer wallet_type, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_ALLOC
RustBuffer ffi_cove_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_cove_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_FREE
void ffi_cove_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_COVE_RUSTBUFFER_RESERVE
RustBuffer ffi_cove_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U8
void ffi_cove_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U8
void ffi_cove_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U8
void ffi_cove_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_cove_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I8
void ffi_cove_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I8
void ffi_cove_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I8
void ffi_cove_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I8
int8_t ffi_cove_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U16
void ffi_cove_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U16
void ffi_cove_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U16
void ffi_cove_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_cove_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I16
void ffi_cove_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I16
void ffi_cove_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I16
void ffi_cove_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I16
int16_t ffi_cove_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U32
void ffi_cove_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U32
void ffi_cove_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U32
void ffi_cove_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_cove_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I32
void ffi_cove_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I32
void ffi_cove_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I32
void ffi_cove_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I32
int32_t ffi_cove_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_U64
void ffi_cove_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_U64
void ffi_cove_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_U64
void ffi_cove_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_cove_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_I64
void ffi_cove_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_I64
void ffi_cove_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_I64
void ffi_cove_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_I64
int64_t ffi_cove_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_F32
void ffi_cove_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_F32
void ffi_cove_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_F32
void ffi_cove_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_F32
float ffi_cove_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_F64
void ffi_cove_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_F64
void ffi_cove_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_F64
void ffi_cove_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_F64
double ffi_cove_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_POINTER
void ffi_cove_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_POINTER
void ffi_cove_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_POINTER
void ffi_cove_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_POINTER
void*_Nonnull ffi_cove_rust_future_complete_pointer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_cove_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_cove_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_cove_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_cove_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_POLL_VOID
void ffi_cove_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_CANCEL_VOID
void ffi_cove_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_FREE_VOID
void ffi_cove_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_COVE_RUST_FUTURE_COMPLETE_VOID
void ffi_cove_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_EQUAL
uint16_t uniffi_cove_checksum_func_address_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_VALID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_VALID
uint16_t uniffi_cove_checksum_func_address_is_valid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_VALID_FOR_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_IS_VALID_FOR_NETWORK
uint16_t uniffi_cove_checksum_func_address_is_valid_for_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_STRING_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ADDRESS_STRING_SPACED_OUT
uint16_t uniffi_cove_checksum_func_address_string_spaced_out(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_AFTER_PIN_ACTION_USER_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_AFTER_PIN_ACTION_USER_MESSAGE
uint16_t uniffi_cove_checksum_func_after_pin_action_user_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_COLOR_SCHEMES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_COLOR_SCHEMES
uint16_t uniffi_cove_checksum_func_all_color_schemes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_FIAT_CURRENCIES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_FIAT_CURRENCIES
uint16_t uniffi_cove_checksum_func_all_fiat_currencies(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_NETWORKS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_NETWORKS
uint16_t uniffi_cove_checksum_func_all_networks(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_UNITS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_ALL_UNITS
uint16_t uniffi_cove_checksum_func_all_units(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_COLOR_SCHEME_SELECTION_CAPITALIZED_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_COLOR_SCHEME_SELECTION_CAPITALIZED_STRING
uint16_t uniffi_cove_checksum_func_color_scheme_selection_capitalized_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_CREATE_TRANSPORT_ERROR_FROM_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_CREATE_TRANSPORT_ERROR_FROM_CODE
uint16_t uniffi_cove_checksum_func_create_transport_error_from_code(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DEFAULT_NODE_SELECTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DEFAULT_NODE_SELECTION
uint16_t uniffi_cove_checksum_func_default_node_selection(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DEFAULT_WALLET_COLORS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DEFAULT_WALLET_COLORS
uint16_t uniffi_cove_checksum_func_default_wallet_colors(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_AUTH_MANAGER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_AUTH_MANAGER_ERROR
uint16_t uniffi_cove_checksum_func_describe_auth_manager_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_MULTI_FORMAT_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_MULTI_FORMAT_ERROR
uint16_t uniffi_cove_checksum_func_describe_multi_format_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_SEND_FLOW_FIAT_ON_CHANGE_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_SEND_FLOW_FIAT_ON_CHANGE_ERROR
uint16_t uniffi_cove_checksum_func_describe_send_flow_fiat_on_change_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_TAP_SIGNER_READER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_TAP_SIGNER_READER_ERROR
uint16_t uniffi_cove_checksum_func_describe_tap_signer_reader_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_WALLET_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_WALLET_ERROR
uint16_t uniffi_cove_checksum_func_describe_wallet_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_WALLET_MANAGER_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DESCRIBE_WALLET_MANAGER_ERROR
uint16_t uniffi_cove_checksum_func_describe_wallet_manager_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DISCOVERY_STATE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_DISCOVERY_STATE_IS_EQUAL
uint16_t uniffi_cove_checksum_func_discovery_state_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_IS_EQUAL
uint16_t uniffi_cove_checksum_func_fee_rate_options_with_total_fee_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_DURATION
uint16_t uniffi_cove_checksum_func_fee_speed_duration(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_IS_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_IS_CUSTOM
uint16_t uniffi_cove_checksum_func_fee_speed_is_custom(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_TO_CIRCLE_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_TO_CIRCLE_COLOR
uint16_t uniffi_cove_checksum_func_fee_speed_to_circle_color(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FEE_SPEED_TO_STRING
uint16_t uniffi_cove_checksum_func_fee_speed_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_AMOUNT_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_AMOUNT_PREVIEW_NEW
uint16_t uniffi_cove_checksum_func_fiat_amount_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_EMOJI
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_EMOJI
uint16_t uniffi_cove_checksum_func_fiat_currency_emoji(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_SUFFIX
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_SUFFIX
uint16_t uniffi_cove_checksum_func_fiat_currency_suffix(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_SYMBOL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_SYMBOL
uint16_t uniffi_cove_checksum_func_fiat_currency_symbol(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_FIAT_CURRENCY_TO_STRING
uint16_t uniffi_cove_checksum_func_fiat_currency_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_GROUPED_PLAIN_WORDS_OF
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_GROUPED_PLAIN_WORDS_OF
uint16_t uniffi_cove_checksum_func_grouped_plain_words_of(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_HARDWARE_WALLET_IS_TAP_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_HARDWARE_WALLET_IS_TAP_SIGNER
uint16_t uniffi_cove_checksum_func_hardware_wallet_is_tap_signer(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_HASH_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_HASH_ROUTE
uint16_t uniffi_cove_checksum_func_hash_route(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_FIAT_CURRENCY_SYMBOL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_FIAT_CURRENCY_SYMBOL
uint16_t uniffi_cove_checksum_func_is_fiat_currency_symbol(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_ROUTE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_ROUTE_EQUAL
uint16_t uniffi_cove_checksum_func_is_route_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_TAP_SIGNER_ROUTE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_TAP_SIGNER_ROUTE_EQUAL
uint16_t uniffi_cove_checksum_func_is_tap_signer_route_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_VALID_CHAIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_IS_VALID_CHAIN_CODE
uint16_t uniffi_cove_checksum_func_is_valid_chain_code(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NETWORK_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NETWORK_TO_STRING
uint16_t uniffi_cove_checksum_func_network_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NFC_MESSAGE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NFC_MESSAGE_IS_EQUAL
uint16_t uniffi_cove_checksum_func_nfc_message_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NODE_SELECTION_TO_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NODE_SELECTION_TO_NODE
uint16_t uniffi_cove_checksum_func_node_selection_to_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NUMBER_OF_WORDS_IN_GROUPS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NUMBER_OF_WORDS_IN_GROUPS
uint16_t uniffi_cove_checksum_func_number_of_words_in_groups(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NUMBER_OF_WORDS_TO_WORD_COUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_NUMBER_OF_WORDS_TO_WORD_COUNT
uint16_t uniffi_cove_checksum_func_number_of_words_to_word_count(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PREVIEW_NEW_LEGACY_FOUND_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PREVIEW_NEW_LEGACY_FOUND_ADDRESS
uint16_t uniffi_cove_checksum_func_preview_new_legacy_found_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PREVIEW_NEW_WRAPPED_FOUND_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PREVIEW_NEW_WRAPPED_FOUND_ADDRESS
uint16_t uniffi_cove_checksum_func_preview_new_wrapped_found_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PRICES_ARE_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_PRICES_ARE_EQUAL
uint16_t uniffi_cove_checksum_func_prices_are_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_STRING_OR_DATA_TRY_INTO_MULTI_FORMAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_STRING_OR_DATA_TRY_INTO_MULTI_FORMAT
uint16_t uniffi_cove_checksum_func_string_or_data_try_into_multi_format(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_CONFIRM_PIN_ARGS_NEW_FROM_NEW_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_CONFIRM_PIN_ARGS_NEW_FROM_NEW_PIN
uint16_t uniffi_cove_checksum_func_tap_signer_confirm_pin_args_new_from_new_pin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_ERROR_IS_AUTH_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_ERROR_IS_AUTH_ERROR
uint16_t uniffi_cove_checksum_func_tap_signer_error_is_auth_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_ERROR_IS_NO_BACKUP_ERROR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_ERROR_IS_NO_BACKUP_ERROR
uint16_t uniffi_cove_checksum_func_tap_signer_error_is_no_backup_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_BACKUP_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_BACKUP_RESPONSE
uint16_t uniffi_cove_checksum_func_tap_signer_response_backup_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_CHANGE_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_CHANGE_RESPONSE
uint16_t uniffi_cove_checksum_func_tap_signer_response_change_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_DERIVE_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_DERIVE_RESPONSE
uint16_t uniffi_cove_checksum_func_tap_signer_response_derive_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_SETUP_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_SETUP_RESPONSE
uint16_t uniffi_cove_checksum_func_tap_signer_response_setup_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_SIGN_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_RESPONSE_SIGN_RESPONSE
uint16_t uniffi_cove_checksum_func_tap_signer_response_sign_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_SETUP_COMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_SETUP_COMPLETE_NEW
uint16_t uniffi_cove_checksum_func_tap_signer_setup_complete_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_SETUP_RETRY_CONTINUE_CMD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TAP_SIGNER_SETUP_RETRY_CONTINUE_CMD
uint16_t uniffi_cove_checksum_func_tap_signer_setup_retry_continue_cmd(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTION_PREVIEW_CONFIRMED_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTION_PREVIEW_CONFIRMED_NEW
uint16_t uniffi_cove_checksum_func_transaction_preview_confirmed_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTION_PREVIEW_UNCONFIRMED_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTION_PREVIEW_UNCONFIRMED_NEW
uint16_t uniffi_cove_checksum_func_transaction_preview_unconfirmed_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTIONS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_TRANSACTIONS_PREVIEW_NEW
uint16_t uniffi_cove_checksum_func_transactions_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_UNIT_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_UNIT_TO_STRING
uint16_t uniffi_cove_checksum_func_unit_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_UPDATE_PRICES_IF_NEEDED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_UPDATE_PRICES_IF_NEEDED
uint16_t uniffi_cove_checksum_func_update_prices_if_needed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_ADDRESS_TYPE_LESS_THAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_ADDRESS_TYPE_LESS_THAN
uint16_t uniffi_cove_checksum_func_wallet_address_type_less_than(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_ADDRESS_TYPE_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_ADDRESS_TYPE_TO_STRING
uint16_t uniffi_cove_checksum_func_wallet_address_type_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_HASH
uint16_t uniffi_cove_checksum_func_wallet_metadata_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_IS_EQUAL
uint16_t uniffi_cove_checksum_func_wallet_metadata_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_METADATA_PREVIEW
uint16_t uniffi_cove_checksum_func_wallet_metadata_preview(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_STATE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_STATE_IS_EQUAL
uint16_t uniffi_cove_checksum_func_wallet_state_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_TYPE_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_FUNC_WALLET_TYPE_TO_STRING
uint16_t uniffi_cove_checksum_func_wallet_type_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_SPACED_OUT
uint16_t uniffi_cove_checksum_method_address_spaced_out(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_STRING
uint16_t uniffi_cove_checksum_method_address_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_TOSTRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_TOSTRING
uint16_t uniffi_cove_checksum_method_address_tostring(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_UNFORMATTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESS_UNFORMATTED
uint16_t uniffi_cove_checksum_method_address_unformatted(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_ADDRESS
uint16_t uniffi_cove_checksum_method_addressinfo_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_ADDRESS_UNFORMATTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_ADDRESS_UNFORMATTED
uint16_t uniffi_cove_checksum_method_addressinfo_address_unformatted(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSINFO_INDEX
uint16_t uniffi_cove_checksum_method_addressinfo_index(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_ADDRESS
uint16_t uniffi_cove_checksum_method_addresswithnetwork_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_AMOUNT
uint16_t uniffi_cove_checksum_method_addresswithnetwork_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ADDRESSWITHNETWORK_NETWORK
uint16_t uniffi_cove_checksum_method_addresswithnetwork_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_AS_BTC
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_AS_BTC
uint16_t uniffi_cove_checksum_method_amount_as_btc(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_AS_SATS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_AS_SATS
uint16_t uniffi_cove_checksum_method_amount_as_sats(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_BTC_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_BTC_STRING
uint16_t uniffi_cove_checksum_method_amount_btc_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_BTC_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_BTC_STRING_WITH_UNIT
uint16_t uniffi_cove_checksum_method_amount_btc_string_with_unit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_FMT_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_FMT_STRING_WITH_UNIT
uint16_t uniffi_cove_checksum_method_amount_fmt_string_with_unit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_SATS_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_SATS_STRING
uint16_t uniffi_cove_checksum_method_amount_sats_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_SATS_STRING_WITH_UNIT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AMOUNT_SATS_STRING_WITH_UNIT
uint16_t uniffi_cove_checksum_method_amount_sats_string_with_unit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTHPIN_CHECK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTHPIN_CHECK
uint16_t uniffi_cove_checksum_method_authpin_check(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTOCOMPLETE_AUTOCOMPLETE
uint16_t uniffi_cove_checksum_method_autocomplete_autocomplete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTOCOMPLETE_IS_VALID_WORD
uint16_t uniffi_cove_checksum_method_autocomplete_is_valid_word(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BALANCE_SPENDABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BALANCE_SPENDABLE
uint16_t uniffi_cove_checksum_method_balance_spendable(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BALANCE_TOTAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BALANCE_TOTAL
uint16_t uniffi_cove_checksum_method_balance_total(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_FINAL_RESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_FINAL_RESULT
uint16_t uniffi_cove_checksum_method_bbqrjoinresult_final_result(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_IS_COMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_IS_COMPLETE
uint16_t uniffi_cove_checksum_method_bbqrjoinresult_is_complete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_PARTS_LEFT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINRESULT_PARTS_LEFT
uint16_t uniffi_cove_checksum_method_bbqrjoinresult_parts_left(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINED_GET_GROUPED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINED_GET_GROUPED_WORDS
uint16_t uniffi_cove_checksum_method_bbqrjoined_get_grouped_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINED_GET_SEED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BBQRJOINED_GET_SEED_WORDS
uint16_t uniffi_cove_checksum_method_bbqrjoined_get_seed_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_AUTOCOMPLETE
uint16_t uniffi_cove_checksum_method_bip39autocomplete_autocomplete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_IS_VALID_WORD
uint16_t uniffi_cove_checksum_method_bip39autocomplete_is_valid_word(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_NEXT_FIELD_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39AUTOCOMPLETE_NEXT_FIELD_NUMBER
uint16_t uniffi_cove_checksum_method_bip39autocomplete_next_field_number(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_AUTOCOMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_AUTOCOMPLETE
uint16_t uniffi_cove_checksum_method_bip39wordspecificautocomplete_autocomplete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_BIP39_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_BIP39_WORD
uint16_t uniffi_cove_checksum_method_bip39wordspecificautocomplete_is_bip39_word(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_VALID_WORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_IS_VALID_WORD
uint16_t uniffi_cove_checksum_method_bip39wordspecificautocomplete_is_valid_word(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_NEXT_FIELD_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BIP39WORDSPECIFICAUTOCOMPLETE_NEXT_FIELD_NUMBER
uint16_t uniffi_cove_checksum_method_bip39wordspecificautocomplete_next_field_number(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_NORMALIZE_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_NORMALIZE_TX_ID
uint16_t uniffi_cove_checksum_method_bitcointransaction_normalize_tx_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_TX_ID
uint16_t uniffi_cove_checksum_method_bitcointransaction_tx_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_TX_ID_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BITCOINTRANSACTION_TX_ID_HASH
uint16_t uniffi_cove_checksum_method_bitcointransaction_tx_id_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BOXEDROUTE_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_BOXEDROUTE_ROUTE
uint16_t uniffi_cove_checksum_method_boxedroute_route(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_FEE_RATE
uint16_t uniffi_cove_checksum_method_confirmdetails_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_FEE_TOTAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_FEE_TOTAL
uint16_t uniffi_cove_checksum_method_confirmdetails_fee_total(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_ID
uint16_t uniffi_cove_checksum_method_confirmdetails_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_ID_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_ID_HASH
uint16_t uniffi_cove_checksum_method_confirmdetails_id_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_INPUTS
uint16_t uniffi_cove_checksum_method_confirmdetails_inputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_NORMALIZED_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_NORMALIZED_ID
uint16_t uniffi_cove_checksum_method_confirmdetails_normalized_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_OUTPUTS
uint16_t uniffi_cove_checksum_method_confirmdetails_outputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT
uint16_t uniffi_cove_checksum_method_confirmdetails_psbt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_BYTES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_BYTES
uint16_t uniffi_cove_checksum_method_confirmdetails_psbt_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_TO_BBQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_TO_BBQR
uint16_t uniffi_cove_checksum_method_confirmdetails_psbt_to_bbqr(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_TO_HEX
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_PSBT_TO_HEX
uint16_t uniffi_cove_checksum_method_confirmdetails_psbt_to_hex(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SENDING_AMOUNT
uint16_t uniffi_cove_checksum_method_confirmdetails_sending_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SENDING_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SENDING_TO
uint16_t uniffi_cove_checksum_method_confirmdetails_sending_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SPENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMDETAILS_SPENDING_AMOUNT
uint16_t uniffi_cove_checksum_method_confirmdetails_spending_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT
uint16_t uniffi_cove_checksum_method_confirmedtransaction_block_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_BLOCK_HEIGHT_FMT
uint16_t uniffi_cove_checksum_method_confirmedtransaction_block_height_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT
uint16_t uniffi_cove_checksum_method_confirmedtransaction_confirmed_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT
uint16_t uniffi_cove_checksum_method_confirmedtransaction_confirmed_at_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT_WITH_TIME
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_CONFIRMED_AT_FMT_WITH_TIME
uint16_t uniffi_cove_checksum_method_confirmedtransaction_confirmed_at_fmt_with_time(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_FIAT_AMOUNT
uint16_t uniffi_cove_checksum_method_confirmedtransaction_fiat_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_ID
uint16_t uniffi_cove_checksum_method_confirmedtransaction_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_LABEL
uint16_t uniffi_cove_checksum_method_confirmedtransaction_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_SENT_AND_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONFIRMEDTRANSACTION_SENT_AND_RECEIVED
uint16_t uniffi_cove_checksum_method_confirmedtransaction_sent_and_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_CONVERT_FROM_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_CONVERT_FROM_FIAT
uint16_t uniffi_cove_checksum_method_converter_convert_from_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_CONVERT_FROM_FIAT_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_CONVERT_FROM_FIAT_STRING
uint16_t uniffi_cove_checksum_method_converter_convert_from_fiat_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_GET_FIAT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_GET_FIAT_VALUE
uint16_t uniffi_cove_checksum_method_converter_get_fiat_value(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_REMOVE_FIAT_SUFFIX
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_CONVERTER_REMOVE_FIAT_SUFFIX
uint16_t uniffi_cove_checksum_method_converter_remove_fiat_suffix(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_DANGEROUS_RESET_ALL_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_DANGEROUS_RESET_ALL_DATA
uint16_t uniffi_cove_checksum_method_database_dangerous_reset_all_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_GLOBAL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_GLOBAL_CONFIG
uint16_t uniffi_cove_checksum_method_database_global_config(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_HISTORICAL_PRICES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_HISTORICAL_PRICES
uint16_t uniffi_cove_checksum_method_database_historical_prices(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_UNSIGNED_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_UNSIGNED_TRANSACTIONS
uint16_t uniffi_cove_checksum_method_database_unsigned_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DATABASE_WALLETS
uint16_t uniffi_cove_checksum_method_database_wallets(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATE_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATE_SAT_PER_VB
uint16_t uniffi_cove_checksum_method_feerate_sat_per_vb(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_DURATION
uint16_t uniffi_cove_checksum_method_feerateoption_duration(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_FEE_RATE
uint16_t uniffi_cove_checksum_method_feerateoption_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_FEE_SPEED
uint16_t uniffi_cove_checksum_method_feerateoption_fee_speed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_IS_EQUAL
uint16_t uniffi_cove_checksum_method_feerateoption_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTION_SAT_PER_VB
uint16_t uniffi_cove_checksum_method_feerateoption_sat_per_vb(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_DURATION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_DURATION
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_duration(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_RATE_OPTIONS
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_fee_rate_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_FEE_SPEED
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_fee_speed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_CUSTOM
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_is_custom(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_IS_EQUAL
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_SAT_PER_VB
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_sat_per_vb(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_TOTAL_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONWITHTOTALFEE_TOTAL_FEE
uint16_t uniffi_cove_checksum_method_feerateoptionwithtotalfee_total_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_FAST
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_FAST
uint16_t uniffi_cove_checksum_method_feerateoptions_fast(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_MEDIUM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_MEDIUM
uint16_t uniffi_cove_checksum_method_feerateoptions_medium(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_SLOW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONS_SLOW
uint16_t uniffi_cove_checksum_method_feerateoptions_slow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_add_custom_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_ADD_CUSTOM_FEE_RATE
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_add_custom_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_CALCULATE_CUSTOM_FEE_SPEED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_CALCULATE_CUSTOM_FEE_SPEED
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_calculate_custom_fee_speed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_CUSTOM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_CUSTOM
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_custom(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_FAST
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_FAST
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_fast(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_FEE_RATE_OPTIONS
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_fee_rate_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_GET_FEE_RATE_WITH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_GET_FEE_RATE_WITH
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_get_fee_rate_with(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_MEDIUM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_MEDIUM
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_medium(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_REMOVE_CUSTOM_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_REMOVE_CUSTOM_FEE
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_remove_custom_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_SLOW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_SLOW
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_slow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_TRANSACTION_SIZE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FEERATEOPTIONSWITHTOTALFEE_TRANSACTION_SIZE
uint16_t uniffi_cove_checksum_method_feerateoptionswithtotalfee_transaction_size(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_AUTH_TYPE
uint16_t uniffi_cove_checksum_method_ffiapp_auth_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DANGEROUS_WIPE_ALL_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DANGEROUS_WIPE_ALL_DATA
uint16_t uniffi_cove_checksum_method_ffiapp_dangerous_wipe_all_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DEBUG_OR_RELEASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DEBUG_OR_RELEASE
uint16_t uniffi_cove_checksum_method_ffiapp_debug_or_release(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_DISPATCH
uint16_t uniffi_cove_checksum_method_ffiapp_dispatch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_EMAIL_MAILTO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_EMAIL_MAILTO
uint16_t uniffi_cove_checksum_method_ffiapp_email_mailto(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_FEES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_FEES
uint16_t uniffi_cove_checksum_method_ffiapp_fees(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_FIND_TAP_SIGNER_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_FIND_TAP_SIGNER_WALLET
uint16_t uniffi_cove_checksum_method_ffiapp_find_tap_signer_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GET_TAP_SIGNER_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GET_TAP_SIGNER_BACKUP
uint16_t uniffi_cove_checksum_method_ffiapp_get_tap_signer_backup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GIT_SHORT_HASH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GIT_SHORT_HASH
uint16_t uniffi_cove_checksum_method_ffiapp_git_short_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GO_TO_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_GO_TO_SELECTED_WALLET
uint16_t uniffi_cove_checksum_method_ffiapp_go_to_selected_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_HAS_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_HAS_WALLETS
uint16_t uniffi_cove_checksum_method_ffiapp_has_wallets(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_INIT_ON_START
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_INIT_ON_START
uint16_t uniffi_cove_checksum_method_ffiapp_init_on_start(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LISTEN_FOR_UPDATES
uint16_t uniffi_cove_checksum_method_ffiapp_listen_for_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE
uint16_t uniffi_cove_checksum_method_ffiapp_load_and_reset_default_route(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE_AFTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_LOAD_AND_RESET_DEFAULT_ROUTE_AFTER
uint16_t uniffi_cove_checksum_method_ffiapp_load_and_reset_default_route_after(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_NETWORK
uint16_t uniffi_cove_checksum_method_ffiapp_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_NUM_WALLETS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_NUM_WALLETS
uint16_t uniffi_cove_checksum_method_ffiapp_num_wallets(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_PRICES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_PRICES
uint16_t uniffi_cove_checksum_method_ffiapp_prices(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_RESET_DEFAULT_ROUTE_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_RESET_DEFAULT_ROUTE_TO
uint16_t uniffi_cove_checksum_method_ffiapp_reset_default_route_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_RESET_NESTED_ROUTES_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_RESET_NESTED_ROUTES_TO
uint16_t uniffi_cove_checksum_method_ffiapp_reset_nested_routes_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_SAVE_TAP_SIGNER_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_SAVE_TAP_SIGNER_BACKUP
uint16_t uniffi_cove_checksum_method_ffiapp_save_tap_signer_backup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_SELECT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_SELECT_WALLET
uint16_t uniffi_cove_checksum_method_ffiapp_select_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_STATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_STATE
uint16_t uniffi_cove_checksum_method_ffiapp_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_UNVERIFIED_WALLET_IDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_UNVERIFIED_WALLET_IDS
uint16_t uniffi_cove_checksum_method_ffiapp_unverified_wallet_ids(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_VERSION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIAPP_VERSION
uint16_t uniffi_cove_checksum_method_ffiapp_version(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_DATA_FROM_RECORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_DATA_FROM_RECORDS
uint16_t uniffi_cove_checksum_method_ffinfcreader_data_from_records(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_IS_RESUMEABLE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_IS_RESUMEABLE
uint16_t uniffi_cove_checksum_method_ffinfcreader_is_resumeable(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_IS_STARTED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_IS_STARTED
uint16_t uniffi_cove_checksum_method_ffinfcreader_is_started(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_MESSAGE_INFO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_MESSAGE_INFO
uint16_t uniffi_cove_checksum_method_ffinfcreader_message_info(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_PARSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_PARSE
uint16_t uniffi_cove_checksum_method_ffinfcreader_parse(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_STRING_FROM_RECORD
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFINFCREADER_STRING_FROM_RECORD
uint16_t uniffi_cove_checksum_method_ffinfcreader_string_from_record(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FILEHANDLER_READ
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FILEHANDLER_READ
uint16_t uniffi_cove_checksum_method_filehandler_read(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FINGERPRINT_AS_LOWERCASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FINGERPRINT_AS_LOWERCASE
uint16_t uniffi_cove_checksum_method_fingerprint_as_lowercase(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FINGERPRINT_AS_UPPERCASE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FINGERPRINT_AS_UPPERCASE
uint16_t uniffi_cove_checksum_method_fingerprint_as_uppercase(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_AUTHTYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_AUTHTYPE
uint16_t uniffi_cove_checksum_method_globalconfigtable_authtype(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_CLEAR_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_CLEAR_SELECTED_WALLET
uint16_t uniffi_cove_checksum_method_globalconfigtable_clear_selected_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_COLORSCHEME
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_COLORSCHEME
uint16_t uniffi_cove_checksum_method_globalconfigtable_colorscheme(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_DELETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_DELETE
uint16_t uniffi_cove_checksum_method_globalconfigtable_delete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_DELETE_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_DELETE_HASHED_PIN_CODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_delete_hashed_pin_code(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_GET
uint16_t uniffi_cove_checksum_method_globalconfigtable_get(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_HASHED_PIN_CODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_hashed_pin_code(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_IS_IN_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_IS_IN_DECOY_MODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_is_in_decoy_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_IS_IN_MAIN_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_IS_IN_MAIN_MODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_is_in_main_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECT_WALLET
uint16_t uniffi_cove_checksum_method_globalconfigtable_select_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTEDFIATCURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTEDFIATCURRENCY
uint16_t uniffi_cove_checksum_method_globalconfigtable_selectedfiatcurrency(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_NETWORK
uint16_t uniffi_cove_checksum_method_globalconfigtable_selected_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_NODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_selected_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SELECTED_WALLET
uint16_t uniffi_cove_checksum_method_globalconfigtable_selected_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET
uint16_t uniffi_cove_checksum_method_globalconfigtable_set(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SETCOLORSCHEME
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SETCOLORSCHEME
uint16_t uniffi_cove_checksum_method_globalconfigtable_setcolorscheme(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_HASHED_PIN_CODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_HASHED_PIN_CODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_set_hashed_pin_code(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NETWORK
uint16_t uniffi_cove_checksum_method_globalconfigtable_set_selected_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_SET_SELECTED_NODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_set_selected_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_WALLET_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALCONFIGTABLE_WALLET_MODE
uint16_t uniffi_cove_checksum_method_globalconfigtable_wallet_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_GET
uint16_t uniffi_cove_checksum_method_globalflagtable_get(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_GET_BOOL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_GET_BOOL_CONFIG
uint16_t uniffi_cove_checksum_method_globalflagtable_get_bool_config(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_SET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_SET
uint16_t uniffi_cove_checksum_method_globalflagtable_set(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_TOGGLE_BOOL_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_GLOBALFLAGTABLE_TOGGLE_BOOL_CONFIG
uint16_t uniffi_cove_checksum_method_globalflagtable_toggle_bool_config(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_BACKGROUND_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_BACKGROUND_COLOR
uint16_t uniffi_cove_checksum_method_headericonpresenter_background_color(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_ICON_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_ICON_COLOR
uint16_t uniffi_cove_checksum_method_headericonpresenter_icon_color(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_RING_COLOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_HEADERICONPRESENTER_RING_COLOR
uint16_t uniffi_cove_checksum_method_headericonpresenter_ring_color(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_DELETE_LABELS_FOR_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_DELETE_LABELS_FOR_TXN
uint16_t uniffi_cove_checksum_method_labelmanager_delete_labels_for_txn(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_EXPORT
uint16_t uniffi_cove_checksum_method_labelmanager_export(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_EXPORT_DEFAULT_FILE_NAME
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_EXPORT_DEFAULT_FILE_NAME
uint16_t uniffi_cove_checksum_method_labelmanager_export_default_file_name(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_HAS_LABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_HAS_LABELS
uint16_t uniffi_cove_checksum_method_labelmanager_has_labels(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_IMPORT
uint16_t uniffi_cove_checksum_method_labelmanager_import(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_IMPORTLABELS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_IMPORTLABELS
uint16_t uniffi_cove_checksum_method_labelmanager_importlabels(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_INSERT_OR_UPDATE_LABELS_FOR_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_INSERT_OR_UPDATE_LABELS_FOR_TXN
uint16_t uniffi_cove_checksum_method_labelmanager_insert_or_update_labels_for_txn(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_TRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_LABELMANAGER_TRANSACTION_LABEL
uint16_t uniffi_cove_checksum_method_labelmanager_transaction_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MNEMONIC_ALL_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MNEMONIC_ALL_WORDS
uint16_t uniffi_cove_checksum_method_mnemonic_all_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MNEMONIC_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MNEMONIC_WORDS
uint16_t uniffi_cove_checksum_method_mnemonic_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_ADD_PART
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_ADD_PART
uint16_t uniffi_cove_checksum_method_multiqr_add_part(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_GET_GROUPED_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_GET_GROUPED_WORDS
uint16_t uniffi_cove_checksum_method_multiqr_get_grouped_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_HANDLE_SCAN_RESULT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_HANDLE_SCAN_RESULT
uint16_t uniffi_cove_checksum_method_multiqr_handle_scan_result(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_IS_BBQR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_IS_BBQR
uint16_t uniffi_cove_checksum_method_multiqr_is_bbqr(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_IS_SEED_QR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_IS_SEED_QR
uint16_t uniffi_cove_checksum_method_multiqr_is_seed_qr(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_TOTAL_PARTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_MULTIQR_TOTAL_PARTS
uint16_t uniffi_cove_checksum_method_multiqr_total_parts(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NDEFRECORDREADER_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NDEFRECORDREADER_ID
uint16_t uniffi_cove_checksum_method_ndefrecordreader_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NDEFRECORDREADER_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NDEFRECORDREADER_TYPE
uint16_t uniffi_cove_checksum_method_ndefrecordreader_type_(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_BYTES_PER_BLOCK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_BYTES_PER_BLOCK
uint16_t uniffi_cove_checksum_method_nfcconst_bytes_per_block(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_NUMBER_OF_BLOCKS_PER_CHUNK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_NUMBER_OF_BLOCKS_PER_CHUNK
uint16_t uniffi_cove_checksum_method_nfcconst_number_of_blocks_per_chunk(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_TOTAL_BYTES_PER_CHUNK
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCCONST_TOTAL_BYTES_PER_CHUNK
uint16_t uniffi_cove_checksum_method_nfcconst_total_bytes_per_chunk(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_DATA
uint16_t uniffi_cove_checksum_method_nfcmessage_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_STRING
uint16_t uniffi_cove_checksum_method_nfcmessage_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_TRY_INTO_MULTI_FORMAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NFCMESSAGE_TRY_INTO_MULTI_FORMAT
uint16_t uniffi_cove_checksum_method_nfcmessage_try_into_multi_format(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_CHECK_AND_SAVE_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_CHECK_AND_SAVE_NODE
uint16_t uniffi_cove_checksum_method_nodeselector_check_and_save_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_CHECK_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_CHECK_SELECTED_NODE
uint16_t uniffi_cove_checksum_method_nodeselector_check_selected_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_NODE_LIST
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_NODE_LIST
uint16_t uniffi_cove_checksum_method_nodeselector_node_list(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_PARSE_CUSTOM_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_PARSE_CUSTOM_NODE
uint16_t uniffi_cove_checksum_method_nodeselector_parse_custom_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_SELECT_PRESET_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_SELECT_PRESET_NODE
uint16_t uniffi_cove_checksum_method_nodeselector_select_preset_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_SELECTED_NODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_NODESELECTOR_SELECTED_NODE
uint16_t uniffi_cove_checksum_method_nodeselector_selected_node(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PRICERESPONSE_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PRICERESPONSE_GET
uint16_t uniffi_cove_checksum_method_priceresponse_get(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PRICERESPONSE_GET_FOR_CURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PRICERESPONSE_GET_FOR_CURRENCY
uint16_t uniffi_cove_checksum_method_priceresponse_get_for_currency(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_FEE
uint16_t uniffi_cove_checksum_method_psbt_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_OUTPUT_TOTAL_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_OUTPUT_TOTAL_AMOUNT
uint16_t uniffi_cove_checksum_method_psbt_output_total_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_TX_ID
uint16_t uniffi_cove_checksum_method_psbt_tx_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_WEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PSBT_WEIGHT
uint16_t uniffi_cove_checksum_method_psbt_weight(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_COLD_WALLET_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_COLD_WALLET_IMPORT
uint16_t uniffi_cove_checksum_method_routefactory_cold_wallet_import(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_HOT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_HOT_WALLET
uint16_t uniffi_cove_checksum_method_routefactory_hot_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_HOT_WALLET_IMPORT_FROM_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_HOT_WALLET_IMPORT_FROM_SCAN
uint16_t uniffi_cove_checksum_method_routefactory_hot_wallet_import_from_scan(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_IS_SAME_PARENT_ROUTE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_IS_SAME_PARENT_ROUTE
uint16_t uniffi_cove_checksum_method_routefactory_is_same_parent_route(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_NESTED_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_NESTED_TO
uint16_t uniffi_cove_checksum_method_routefactory_load_and_reset_nested_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO
uint16_t uniffi_cove_checksum_method_routefactory_load_and_reset_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO_AFTER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_LOAD_AND_RESET_TO_AFTER
uint16_t uniffi_cove_checksum_method_routefactory_load_and_reset_to_after(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_MAIN_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_MAIN_WALLET_SETTINGS
uint16_t uniffi_cove_checksum_method_routefactory_main_wallet_settings(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NESTED_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NESTED_SETTINGS
uint16_t uniffi_cove_checksum_method_routefactory_nested_settings(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NESTED_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NESTED_WALLET_SETTINGS
uint16_t uniffi_cove_checksum_method_routefactory_nested_wallet_settings(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NEW_HOT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NEW_HOT_WALLET
uint16_t uniffi_cove_checksum_method_routefactory_new_hot_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NEW_WALLET_SELECT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_NEW_WALLET_SELECT
uint16_t uniffi_cove_checksum_method_routefactory_new_wallet_select(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_QR_IMPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_QR_IMPORT
uint16_t uniffi_cove_checksum_method_routefactory_qr_import(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SECRET_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SECRET_WORDS
uint16_t uniffi_cove_checksum_method_routefactory_secret_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND
uint16_t uniffi_cove_checksum_method_routefactory_send(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_CONFIRM
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_CONFIRM
uint16_t uniffi_cove_checksum_method_routefactory_send_confirm(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_HARDWARE_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_HARDWARE_EXPORT
uint16_t uniffi_cove_checksum_method_routefactory_send_hardware_export(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_SET_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_SEND_SET_AMOUNT
uint16_t uniffi_cove_checksum_method_routefactory_send_set_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_WALLET_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_ROUTEFACTORY_WALLET_SETTINGS
uint16_t uniffi_cove_checksum_method_routefactory_wallet_settings(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_AUTH_TYPE
uint16_t uniffi_cove_checksum_method_rustauthmanager_auth_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_CHECKDECOYPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_CHECKDECOYPIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_checkdecoypin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_CHECKWIPEDATAPIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_CHECKWIPEDATAPIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_checkwipedatapin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DELETE_DECOY_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DELETE_DECOY_PIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_delete_decoy_pin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DELETE_WIPE_DATA_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DELETE_WIPE_DATA_PIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_delete_wipe_data_pin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_DISPATCH
uint16_t uniffi_cove_checksum_method_rustauthmanager_dispatch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_DECOY_PIN_ENABLED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_DECOY_PIN_ENABLED
uint16_t uniffi_cove_checksum_method_rustauthmanager_is_decoy_pin_enabled(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_IN_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_IN_DECOY_MODE
uint16_t uniffi_cove_checksum_method_rustauthmanager_is_in_decoy_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_WIPE_DATA_PIN_ENABLED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_IS_WIPE_DATA_PIN_ENABLED
uint16_t uniffi_cove_checksum_method_rustauthmanager_is_wipe_data_pin_enabled(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_LISTEN_FOR_UPDATES
uint16_t uniffi_cove_checksum_method_rustauthmanager_listen_for_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_LOCKED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_LOCKED_AT
uint16_t uniffi_cove_checksum_method_rustauthmanager_locked_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SEND
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SEND
uint16_t uniffi_cove_checksum_method_rustauthmanager_send(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_AUTH_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_AUTH_TYPE
uint16_t uniffi_cove_checksum_method_rustauthmanager_set_auth_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_DECOY_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_DECOY_PIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_set_decoy_pin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_LOCKED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_LOCKED_AT
uint16_t uniffi_cove_checksum_method_rustauthmanager_set_locked_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_WIPE_DATA_PIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SET_WIPE_DATA_PIN
uint16_t uniffi_cove_checksum_method_rustauthmanager_set_wipe_data_pin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SWITCH_TO_DECOY_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SWITCH_TO_DECOY_MODE
uint16_t uniffi_cove_checksum_method_rustauthmanager_switch_to_decoy_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SWITCH_TO_MAIN_MODE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_SWITCH_TO_MAIN_MODE
uint16_t uniffi_cove_checksum_method_rustauthmanager_switch_to_main_mode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_VALIDATE_PIN_SETTINGS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTAUTHMANAGER_VALIDATE_PIN_SETTINGS
uint16_t uniffi_cove_checksum_method_rustauthmanager_validate_pin_settings(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_DISPATCH
uint16_t uniffi_cove_checksum_method_rustimportwalletmanager_dispatch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_IMPORT_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_IMPORT_WALLET
uint16_t uniffi_cove_checksum_method_rustimportwalletmanager_import_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTIMPORTWALLETMANAGER_LISTEN_FOR_UPDATES
uint16_t uniffi_cove_checksum_method_rustimportwalletmanager_listen_for_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_bip_39_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS_GROUPED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_BIP_39_WORDS_GROUPED
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_bip_39_words_grouped(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_CARD_INDEXES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_CARD_INDEXES
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_card_indexes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_DISPATCH
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_dispatch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_GET_STATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_GET_STATE
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_get_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_LISTEN_FOR_UPDATES
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_listen_for_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_NUMBER_OF_WORDS_COUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_NUMBER_OF_WORDS_COUNT
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_number_of_words_count(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_SAVE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTPENDINGWALLETMANAGER_SAVE_WALLET
uint16_t uniffi_cove_checksum_method_rustpendingwalletmanager_save_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_ADDRESS_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_ADDRESS_AT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_address_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_AMOUNT_IN_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_AMOUNT_IN_FIAT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_amount_in_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BALANCE
uint16_t uniffi_cove_checksum_method_rustwalletmanager_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BALANCE_IN_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BALANCE_IN_FIAT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_balance_in_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BROADCAST_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BROADCAST_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_broadcast_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_DRAIN_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_DRAIN_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_build_drain_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_build_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION_WITH_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_BUILD_TRANSACTION_WITH_FEE_RATE
uint16_t uniffi_cove_checksum_method_rustwalletmanager_build_transaction_with_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONFIRM_TXN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONFIRM_TXN
uint16_t uniffi_cove_checksum_method_rustwalletmanager_confirm_txn(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_AND_DISPLAY_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_AND_DISPLAY_FIAT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_convert_and_display_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_FROM_FIAT_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_FROM_FIAT_STRING
uint16_t uniffi_cove_checksum_method_rustwalletmanager_convert_from_fiat_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_TO_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CONVERT_TO_FIAT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_convert_to_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CURRENT_BLOCK_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_CURRENT_BLOCK_HEIGHT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_current_block_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DELETE_UNSIGNED_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DELETE_UNSIGNED_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_delete_unsigned_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DELETE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DELETE_WALLET
uint16_t uniffi_cove_checksum_method_rustwalletmanager_delete_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPATCH
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPATCH
uint16_t uniffi_cove_checksum_method_rustwalletmanager_dispatch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_AMOUNT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_display_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_FIAT_AMOUNT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_display_fiat_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_SENT_AND_RECEIVED_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_DISPLAY_SENT_AND_RECEIVED_AMOUNT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_display_sent_and_received_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_fee_rate_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE
uint16_t uniffi_cove_checksum_method_rustwalletmanager_fee_rate_options_with_total_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_FOR_DRAIN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEE_RATE_OPTIONS_WITH_TOTAL_FEE_FOR_DRAIN
uint16_t uniffi_cove_checksum_method_rustwalletmanager_fee_rate_options_with_total_fee_for_drain(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FEES
uint16_t uniffi_cove_checksum_method_rustwalletmanager_fees(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FINALIZE_PSBT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FINALIZE_PSBT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_finalize_psbt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FORCE_UPDATE_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FORCE_UPDATE_HEIGHT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_force_update_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FORCE_WALLET_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_FORCE_WALLET_SCAN
uint16_t uniffi_cove_checksum_method_rustwalletmanager_force_wallet_scan(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_FEE_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_FEE_OPTIONS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_get_fee_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_TRANSACTIONS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_get_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_UNSIGNED_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_GET_UNSIGNED_TRANSACTIONS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_get_unsigned_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_LABEL_MANAGER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_LABEL_MANAGER
uint16_t uniffi_cove_checksum_method_rustwalletmanager_label_manager(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_LISTEN_FOR_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_LISTEN_FOR_UPDATES
uint16_t uniffi_cove_checksum_method_rustwalletmanager_listen_for_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_MARK_WALLET_AS_VERIFIED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_MARK_WALLET_AS_VERIFIED
uint16_t uniffi_cove_checksum_method_rustwalletmanager_mark_wallet_as_verified(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_MASTER_FINGERPRINT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_MASTER_FINGERPRINT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_master_fingerprint(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NEXT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NEXT_ADDRESS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_next_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_number_of_confirmations(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_NUMBER_OF_CONFIRMATIONS_FMT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_number_of_confirmations_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SAVE_UNSIGNED_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SAVE_UNSIGNED_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_save_unsigned_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SELECTED_FIAT_CURRENCY
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SELECTED_FIAT_CURRENCY
uint16_t uniffi_cove_checksum_method_rustwalletmanager_selected_fiat_currency(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SENT_AND_RECEIVED_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SENT_AND_RECEIVED_FIAT
uint16_t uniffi_cove_checksum_method_rustwalletmanager_sent_and_received_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SET_WALLET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SET_WALLET_METADATA
uint16_t uniffi_cove_checksum_method_rustwalletmanager_set_wallet_metadata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SIGN_AND_BROADCAST_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SIGN_AND_BROADCAST_TRANSACTION
uint16_t uniffi_cove_checksum_method_rustwalletmanager_sign_and_broadcast_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SPLIT_TRANSACTION_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SPLIT_TRANSACTION_OUTPUTS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_split_transaction_outputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_START_WALLET_SCAN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_START_WALLET_SCAN
uint16_t uniffi_cove_checksum_method_rustwalletmanager_start_wallet_scan(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SWITCH_TO_DIFFERENT_WALLET_ADDRESS_TYPE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_SWITCH_TO_DIFFERENT_WALLET_ADDRESS_TYPE
uint16_t uniffi_cove_checksum_method_rustwalletmanager_switch_to_different_wallet_address_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_TRANSACTION_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_TRANSACTION_DETAILS
uint16_t uniffi_cove_checksum_method_rustwalletmanager_transaction_details(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_VALIDATE_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_VALIDATE_METADATA
uint16_t uniffi_cove_checksum_method_rustwalletmanager_validate_metadata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_WALLET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_WALLET_METADATA
uint16_t uniffi_cove_checksum_method_rustwalletmanager_wallet_metadata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_WORD_VALIDATOR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_RUSTWALLETMANAGER_WORD_VALIDATOR
uint16_t uniffi_cove_checksum_method_rustwalletmanager_word_validator(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SEEDQR_GET_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SEEDQR_GET_WORDS
uint16_t uniffi_cove_checksum_method_seedqr_get_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SEEDQR_GROUPED_PLAIN_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SEEDQR_GROUPED_PLAIN_WORDS
uint16_t uniffi_cove_checksum_method_seedqr_grouped_plain_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENDFLOWFIATONCHANGEHANDLER_ON_CHANGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENDFLOWFIATONCHANGEHANDLER_ON_CHANGE
uint16_t uniffi_cove_checksum_method_sendflowfiatonchangehandler_on_change(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_AMOUNT
uint16_t uniffi_cove_checksum_method_sentandreceived_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_AMOUNT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_AMOUNT_FMT
uint16_t uniffi_cove_checksum_method_sentandreceived_amount_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_DIRECTION
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_DIRECTION
uint16_t uniffi_cove_checksum_method_sentandreceived_direction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_EXTERNAL_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_EXTERNAL_SENT
uint16_t uniffi_cove_checksum_method_sentandreceived_external_sent(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_LABEL
uint16_t uniffi_cove_checksum_method_sentandreceived_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_RECEIVED
uint16_t uniffi_cove_checksum_method_sentandreceived_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_SENTANDRECEIVED_SENT
uint16_t uniffi_cove_checksum_method_sentandreceived_sent(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_CONTINUE_SETUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_CONTINUE_SETUP
uint16_t uniffi_cove_checksum_method_tapsignerreader_continue_setup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_LAST_RESPONSE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_LAST_RESPONSE
uint16_t uniffi_cove_checksum_method_tapsignerreader_last_response(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_RUN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_RUN
uint16_t uniffi_cove_checksum_method_tapsignerreader_run(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_SETUP
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_SETUP
uint16_t uniffi_cove_checksum_method_tapsignerreader_setup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPSIGNERREADER_SIGN
uint16_t uniffi_cove_checksum_method_tapsignerreader_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_ADDRESS
uint16_t uniffi_cove_checksum_method_transactiondetails_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_ADDRESS_SPACED_OUT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_ADDRESS_SPACED_OUT
uint16_t uniffi_cove_checksum_method_transactiondetails_address_spaced_out(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT
uint16_t uniffi_cove_checksum_method_transactiondetails_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT
uint16_t uniffi_cove_checksum_method_transactiondetails_amount_fiat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FIAT_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_amount_fiat_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_AMOUNT_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_amount_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER
uint16_t uniffi_cove_checksum_method_transactiondetails_block_number(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_BLOCK_NUMBER_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_block_number_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_CONFIRMATION_DATE_TIME
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_CONFIRMATION_DATE_TIME
uint16_t uniffi_cove_checksum_method_transactiondetails_confirmation_date_time(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_FEE_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_FEE_FIAT_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_fee_fiat_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_FEE_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_FEE_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_fee_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_CONFIRMED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_CONFIRMED
uint16_t uniffi_cove_checksum_method_transactiondetails_is_confirmed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_RECEIVED
uint16_t uniffi_cove_checksum_method_transactiondetails_is_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_IS_SENT
uint16_t uniffi_cove_checksum_method_transactiondetails_is_sent(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FIAT_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FIAT_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_sent_sans_fee_fiat_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FMT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_SENT_SANS_FEE_FMT
uint16_t uniffi_cove_checksum_method_transactiondetails_sent_sans_fee_fmt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TRANSACTION_LABEL
uint16_t uniffi_cove_checksum_method_transactiondetails_transaction_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TRANSACTION_URL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TRANSACTION_URL
uint16_t uniffi_cove_checksum_method_transactiondetails_transaction_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TRANSACTIONDETAILS_TX_ID
uint16_t uniffi_cove_checksum_method_transactiondetails_tx_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TXID_AS_HASH_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TXID_AS_HASH_STRING
uint16_t uniffi_cove_checksum_method_txid_as_hash_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TXID_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TXID_IS_EQUAL
uint16_t uniffi_cove_checksum_method_txid_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_FIAT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_FIAT_AMOUNT
uint16_t uniffi_cove_checksum_method_unconfirmedtransaction_fiat_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_ID
uint16_t uniffi_cove_checksum_method_unconfirmedtransaction_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_LABEL
uint16_t uniffi_cove_checksum_method_unconfirmedtransaction_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_LAST_SEEN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_LAST_SEEN
uint16_t uniffi_cove_checksum_method_unconfirmedtransaction_last_seen(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_SENT_AND_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNCONFIRMEDTRANSACTION_SENT_AND_RECEIVED
uint16_t uniffi_cove_checksum_method_unconfirmedtransaction_sent_and_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_DETAILS
uint16_t uniffi_cove_checksum_method_unsignedtransaction_details(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_ID
uint16_t uniffi_cove_checksum_method_unsignedtransaction_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_LABEL
uint16_t uniffi_cove_checksum_method_unsignedtransaction_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_SENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_SENDING_AMOUNT
uint16_t uniffi_cove_checksum_method_unsignedtransaction_sending_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_SPENDING_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTION_SPENDING_AMOUNT
uint16_t uniffi_cove_checksum_method_unsignedtransaction_spending_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_CONFIRM_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_CONFIRM_DETAILS
uint16_t uniffi_cove_checksum_method_unsignedtransactionrecord_confirm_details(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_CREATED_AT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_CREATED_AT
uint16_t uniffi_cove_checksum_method_unsignedtransactionrecord_created_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_TX_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_TX_ID
uint16_t uniffi_cove_checksum_method_unsignedtransactionrecord_tx_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_WALLET_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONRECORD_WALLET_ID
uint16_t uniffi_cove_checksum_method_unsignedtransactionrecord_wallet_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTX
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTX
uint16_t uniffi_cove_checksum_method_unsignedtransactionstable_gettx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTXTHROW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_UNSIGNEDTRANSACTIONSTABLE_GETTXTHROW
uint16_t uniffi_cove_checksum_method_unsignedtransactionstable_gettxthrow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLET_ID
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLET_ID
uint16_t uniffi_cove_checksum_method_wallet_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_ALL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_ALL
uint16_t uniffi_cove_checksum_method_walletstable_all(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_ALL_SORTED_ACTIVE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_ALL_SORTED_ACTIVE
uint16_t uniffi_cove_checksum_method_walletstable_all_sorted_active(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_IS_EMPTY
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_IS_EMPTY
uint16_t uniffi_cove_checksum_method_walletstable_is_empty(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_LEN
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETSTABLE_LEN
uint16_t uniffi_cove_checksum_method_walletstable_len(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_IS_COMPLETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_IS_COMPLETE
uint16_t uniffi_cove_checksum_method_wordvalidator_is_complete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_IS_WORD_CORRECT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_IS_WORD_CORRECT
uint16_t uniffi_cove_checksum_method_wordvalidator_is_word_correct(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_POSSIBLE_WORDS
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WORDVALIDATOR_POSSIBLE_WORDS
uint16_t uniffi_cove_checksum_method_wordvalidator_possible_words(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESS_FROM_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESS_FROM_STRING
uint16_t uniffi_cove_checksum_constructor_address_from_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESS_PREVIEW_NEW
uint16_t uniffi_cove_checksum_constructor_address_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESSARGS_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESSARGS_NEW
uint16_t uniffi_cove_checksum_constructor_addressargs_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESSWITHNETWORK_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ADDRESSWITHNETWORK_NEW
uint16_t uniffi_cove_checksum_constructor_addresswithnetwork_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_FROM_SAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_FROM_SAT
uint16_t uniffi_cove_checksum_constructor_amount_from_sat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_ONE_BTC
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_ONE_BTC
uint16_t uniffi_cove_checksum_constructor_amount_one_btc(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_ONE_SAT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AMOUNT_ONE_SAT
uint16_t uniffi_cove_checksum_constructor_amount_one_sat(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AUTHPIN_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_AUTHPIN_NEW
uint16_t uniffi_cove_checksum_constructor_authpin_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BALANCE_ZERO
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BALANCE_ZERO
uint16_t uniffi_cove_checksum_constructor_balance_zero(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BIP39AUTOCOMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BIP39AUTOCOMPLETE_NEW
uint16_t uniffi_cove_checksum_constructor_bip39autocomplete_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BIP39WORDSPECIFICAUTOCOMPLETE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BIP39WORDSPECIFICAUTOCOMPLETE_NEW
uint16_t uniffi_cove_checksum_constructor_bip39wordspecificautocomplete_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_NEW
uint16_t uniffi_cove_checksum_constructor_bitcointransaction_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMDATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMDATA
uint16_t uniffi_cove_checksum_constructor_bitcointransaction_tryfromdata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMNFCMESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMNFCMESSAGE
uint16_t uniffi_cove_checksum_constructor_bitcointransaction_tryfromnfcmessage(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMSTRINGORDATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BITCOINTRANSACTION_TRYFROMSTRINGORDATA
uint16_t uniffi_cove_checksum_constructor_bitcointransaction_tryfromstringordata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BOXEDROUTE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_BOXEDROUTE_NEW
uint16_t uniffi_cove_checksum_constructor_boxedroute_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_CONFIRMDETAILS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_CONFIRMDETAILS_PREVIEW_NEW
uint16_t uniffi_cove_checksum_constructor_confirmdetails_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_CONVERTER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_CONVERTER_NEW
uint16_t uniffi_cove_checksum_constructor_converter_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_DATABASE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_DATABASE_NEW
uint16_t uniffi_cove_checksum_constructor_database_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_DEVICE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_DEVICE_NEW
uint16_t uniffi_cove_checksum_constructor_device_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATE_FROM_SAT_PER_VB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATE_FROM_SAT_PER_VB
uint16_t uniffi_cove_checksum_constructor_feerate_from_sat_per_vb(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTION_NEW
uint16_t uniffi_cove_checksum_constructor_feerateoption_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONWITHTOTALFEE_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONWITHTOTALFEE_NEW
uint16_t uniffi_cove_checksum_constructor_feerateoptionwithtotalfee_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONS_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONS_PREVIEW_NEW
uint16_t uniffi_cove_checksum_constructor_feerateoptions_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONSWITHTOTALFEE_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FEERATEOPTIONSWITHTOTALFEE_PREVIEW_NEW
uint16_t uniffi_cove_checksum_constructor_feerateoptionswithtotalfee_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FFIAPP_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FFIAPP_NEW
uint16_t uniffi_cove_checksum_constructor_ffiapp_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FFINFCREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FFINFCREADER_NEW
uint16_t uniffi_cove_checksum_constructor_ffinfcreader_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FILEHANDLER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FILEHANDLER_NEW
uint16_t uniffi_cove_checksum_constructor_filehandler_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FINGERPRINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_FINGERPRINT_NEW
uint16_t uniffi_cove_checksum_constructor_fingerprint_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_HEADERICONPRESENTER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_HEADERICONPRESENTER_NEW
uint16_t uniffi_cove_checksum_constructor_headericonpresenter_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_KEYCHAIN_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_KEYCHAIN_NEW
uint16_t uniffi_cove_checksum_constructor_keychain_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_LABELMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_LABELMANAGER_NEW
uint16_t uniffi_cove_checksum_constructor_labelmanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MNEMONIC_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MNEMONIC_NEW
uint16_t uniffi_cove_checksum_constructor_mnemonic_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MNEMONIC_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MNEMONIC_PREVIEW
uint16_t uniffi_cove_checksum_constructor_mnemonic_preview(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_NEW_FROM_STRING
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_NEW_FROM_STRING
uint16_t uniffi_cove_checksum_constructor_multiqr_new_from_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_TRY_NEW
uint16_t uniffi_cove_checksum_constructor_multiqr_try_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_TRY_NEW_FROM_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_MULTIQR_TRY_NEW_FROM_DATA
uint16_t uniffi_cove_checksum_constructor_multiqr_try_new_from_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NDEFRECORDREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NDEFRECORDREADER_NEW
uint16_t uniffi_cove_checksum_constructor_ndefrecordreader_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NFCCONST_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NFCCONST_NEW
uint16_t uniffi_cove_checksum_constructor_nfcconst_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NFCMESSAGE_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NFCMESSAGE_TRY_NEW
uint16_t uniffi_cove_checksum_constructor_nfcmessage_try_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NODESELECTOR_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_NODESELECTOR_NEW
uint16_t uniffi_cove_checksum_constructor_nodeselector_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_PSBT_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_PSBT_NEW
uint16_t uniffi_cove_checksum_constructor_psbt_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ROUTEFACTORY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_ROUTEFACTORY_NEW
uint16_t uniffi_cove_checksum_constructor_routefactory_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTAUTHMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTAUTHMANAGER_NEW
uint16_t uniffi_cove_checksum_constructor_rustauthmanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTIMPORTWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTIMPORTWALLETMANAGER_NEW
uint16_t uniffi_cove_checksum_constructor_rustimportwalletmanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTPENDINGWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTPENDINGWALLETMANAGER_NEW
uint16_t uniffi_cove_checksum_constructor_rustpendingwalletmanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_NEW
uint16_t uniffi_cove_checksum_constructor_rustwalletmanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET
uint16_t uniffi_cove_checksum_constructor_rustwalletmanager_preview_new_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET_WITH_METADATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_PREVIEW_NEW_WALLET_WITH_METADATA
uint16_t uniffi_cove_checksum_constructor_rustwalletmanager_preview_new_wallet_with_metadata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_TAP_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_TAP_SIGNER
uint16_t uniffi_cove_checksum_constructor_rustwalletmanager_try_new_from_tap_signer(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_XPUB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_RUSTWALLETMANAGER_TRY_NEW_FROM_XPUB
uint16_t uniffi_cove_checksum_constructor_rustwalletmanager_try_new_from_xpub(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SEEDQR_NEW_FROM_DATA
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SEEDQR_NEW_FROM_DATA
uint16_t uniffi_cove_checksum_constructor_seedqr_new_from_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SEEDQR_NEW_FROM_STR
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SEEDQR_NEW_FROM_STR
uint16_t uniffi_cove_checksum_constructor_seedqr_new_from_str(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SENDFLOWFIATONCHANGEHANDLER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SENDFLOWFIATONCHANGEHANDLER_NEW
uint16_t uniffi_cove_checksum_constructor_sendflowfiatonchangehandler_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SETUPCMD_TRY_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_SETUPCMD_TRY_NEW
uint16_t uniffi_cove_checksum_constructor_setupcmd_try_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TAPSIGNERREADER_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TAPSIGNERREADER_NEW
uint16_t uniffi_cove_checksum_constructor_tapsignerreader_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_RECEIVED
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_confirmed_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_CONFIRMED_SENT
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_confirmed_sent(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_CONFIRMED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_CONFIRMED
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_new_confirmed(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_WITH_LABEL
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_NEW_WITH_LABEL
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_new_with_label(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_RECEIVED
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_RECEIVED
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_pending_received(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_SENT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_TRANSACTIONDETAILS_PREVIEW_PENDING_SENT
uint16_t uniffi_cove_checksum_constructor_transactiondetails_preview_pending_sent(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_UNSIGNEDTRANSACTION_PREVIEW_NEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_UNSIGNEDTRANSACTION_PREVIEW_NEW
uint16_t uniffi_cove_checksum_constructor_unsignedtransaction_preview_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_NEW_FROM_EXPORT
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_NEW_FROM_EXPORT
uint16_t uniffi_cove_checksum_constructor_wallet_new_from_export(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_NEW_FROM_XPUB
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_NEW_FROM_XPUB
uint16_t uniffi_cove_checksum_constructor_wallet_new_from_xpub(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_PREVIEWNEWWALLET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WALLET_PREVIEWNEWWALLET
uint16_t uniffi_cove_checksum_constructor_wallet_previewnewwallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WORDVALIDATOR_PREVIEW
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_CONSTRUCTOR_WORDVALIDATOR_PREVIEW
uint16_t uniffi_cove_checksum_constructor_wordvalidator_preview(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTHMANAGERRECONCILER_RECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_AUTHMANAGERRECONCILER_RECONCILE
uint16_t uniffi_cove_checksum_method_authmanagerreconciler_reconcile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DEVICEACCESS_TIMEZONE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_DEVICEACCESS_TIMEZONE
uint16_t uniffi_cove_checksum_method_deviceaccess_timezone(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIRECONCILE_RECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_FFIRECONCILE_RECONCILE
uint16_t uniffi_cove_checksum_method_ffireconcile_reconcile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_IMPORTWALLETMANAGERRECONCILER_RECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_IMPORTWALLETMANAGERRECONCILER_RECONCILE
uint16_t uniffi_cove_checksum_method_importwalletmanagerreconciler_reconcile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_SAVE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_SAVE
uint16_t uniffi_cove_checksum_method_keychainaccess_save(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_GET
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_GET
uint16_t uniffi_cove_checksum_method_keychainaccess_get(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_DELETE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_KEYCHAINACCESS_DELETE
uint16_t uniffi_cove_checksum_method_keychainaccess_delete(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PENDINGWALLETMANAGERRECONCILER_RECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_PENDINGWALLETMANAGERRECONCILER_RECONCILE
uint16_t uniffi_cove_checksum_method_pendingwalletmanagerreconciler_reconcile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_SET_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_SET_MESSAGE
uint16_t uniffi_cove_checksum_method_tapcardtransportprotocol_set_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_APPEND_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_APPEND_MESSAGE
uint16_t uniffi_cove_checksum_method_tapcardtransportprotocol_append_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_TRANSMIT_APDU
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_TAPCARDTRANSPORTPROTOCOL_TRANSMIT_APDU
uint16_t uniffi_cove_checksum_method_tapcardtransportprotocol_transmit_apdu(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETMANAGERRECONCILER_RECONCILE
#define UNIFFI_FFIDEF_UNIFFI_COVE_CHECKSUM_METHOD_WALLETMANAGERRECONCILER_RECONCILE
uint16_t uniffi_cove_checksum_method_walletmanagerreconciler_reconcile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_COVE_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_COVE_UNIFFI_CONTRACT_VERSION
uint32_t ffi_cove_uniffi_contract_version(void
    
);
#endif

